{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Regression Against Time"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## The Formation Process of Winners and Losers in Momentum Investing\n",
    "(https://papers.ssrn.com/sol3/papers.cfm?abstract_id=2610571)\n",
    "\n",
    "> **p. 3**: Intermediate-term (3–12 months) momentum has been documented by Jegadeesh\n",
    "and Titman (1993, 2001, hereafter JT), while short-term (weekly) and long-term (3–5\n",
    "years) reversals have been documented by Lehmann (1990) and Jegadeesh (1990) and\n",
    "by DeBondt and Thaler (1985), respectively. Various models and theories have been\n",
    "proposed to explain the coexistence of intermediate-term momentum and long-term\n",
    "reversal. However, most studies have focused primarily on which stocks are winners\n",
    "or losers; they have paid little attention to how those stocks become winners or losers.\n",
    "This paper develops a model to analyze whether the movement of historical prices is\n",
    "related to future expected returns.\n",
    "\n",
    "> **p. 4**: This paper captures the idea that past returns and the formation process of past\n",
    "returns have a joint effect on future expected returns. We argue that how one stock\n",
    "becomes a winner or loser—that is, the movement of historical prices—plays an\n",
    "important role in momentum investing. Using a polynomial quadratic model to\n",
    "approximate the nonlinear pattern of historical prices, the model shows that as long as\n",
    "two stocks share the same return over the past n-month, the future expected return of\n",
    "the stock whose historical prices are convex shaped is not lower than one whose\n",
    "historical prices are concave shaped. In other words, when there are two winner (or\n",
    "loser) stocks, the one with convex-shaped historical prices will possess higher future\n",
    "expected returns than the one with concave-shaped historical prices.\n",
    "\n",
    "> **p. 4**: To test the model empirically, we regress previous daily prices in the ranking\n",
    "period on an ordinal time variable and the square of the ordinal time variable for each\n",
    "stock. The coefficient of the square of the ordinal time variable is denoted as $\\gamma$."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Install packages"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import sys"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting alphalens==0.3.2 (from -r requirements.txt (line 1))\n",
      "  Using cached https://files.pythonhosted.org/packages/a5/dc/2f9cd107d0d4cf6223d37d81ddfbbdbf0d703d03669b83810fa6b97f32e5/alphalens-0.3.2.tar.gz\n",
      "Requirement already satisfied: colour==0.1.5 in /opt/conda/lib/python3.6/site-packages (from -r requirements.txt (line 2)) (0.1.5)\n",
      "Collecting cvxpy==1.0.3 (from -r requirements.txt (line 3))\n",
      "  Using cached https://files.pythonhosted.org/packages/a1/59/2613468ffbbe3a818934d06b81b9f4877fe054afbf4f99d2f43f398a0b34/cvxpy-1.0.3.tar.gz\n",
      "Requirement already satisfied: cycler==0.10.0 in /opt/conda/lib/python3.6/site-packages/cycler-0.10.0-py3.6.egg (from -r requirements.txt (line 4)) (0.10.0)\n",
      "Collecting numpy==1.14.5 (from -r requirements.txt (line 5))\n",
      "  Using cached https://files.pythonhosted.org/packages/68/1e/116ad560de97694e2d0c1843a7a0075cc9f49e922454d32f49a80eb6f1f2/numpy-1.14.5-cp36-cp36m-manylinux1_x86_64.whl\n",
      "Collecting pandas==0.18.1 (from -r requirements.txt (line 6))\n",
      "  Using cached https://files.pythonhosted.org/packages/11/09/e66eb844daba8680ddff26335d5b4fead77f60f957678243549a8dd4830d/pandas-0.18.1.tar.gz\n",
      "Collecting plotly==2.2.3 (from -r requirements.txt (line 7))\n",
      "  Using cached https://files.pythonhosted.org/packages/99/a6/8214b6564bf4ace9bec8a26e7f89832792be582c042c47c912d3201328a0/plotly-2.2.3.tar.gz\n",
      "Requirement already satisfied: pyparsing==2.2.0 in /opt/conda/lib/python3.6/site-packages (from -r requirements.txt (line 8)) (2.2.0)\n",
      "Requirement already satisfied: python-dateutil==2.6.1 in /opt/conda/lib/python3.6/site-packages (from -r requirements.txt (line 9)) (2.6.1)\n",
      "Requirement already satisfied: pytz==2017.3 in /opt/conda/lib/python3.6/site-packages (from -r requirements.txt (line 10)) (2017.3)\n",
      "Requirement already satisfied: requests==2.18.4 in /opt/conda/lib/python3.6/site-packages (from -r requirements.txt (line 11)) (2.18.4)\n",
      "Collecting scipy==1.0.0 (from -r requirements.txt (line 12))\n",
      "  Using cached https://files.pythonhosted.org/packages/d8/5e/caa01ba7be11600b6a9d39265440d7b3be3d69206da887c42bef049521f2/scipy-1.0.0-cp36-cp36m-manylinux1_x86_64.whl\n",
      "Requirement already satisfied: scikit-learn==0.19.1 in /opt/conda/lib/python3.6/site-packages (from -r requirements.txt (line 13)) (0.19.1)\n",
      "Requirement already satisfied: six==1.11.0 in /opt/conda/lib/python3.6/site-packages (from -r requirements.txt (line 14)) (1.11.0)\n",
      "Collecting tqdm==4.19.5 (from -r requirements.txt (line 15))\n",
      "  Using cached https://files.pythonhosted.org/packages/71/3c/341b4fa23cb3abc335207dba057c790f3bb329f6757e1fcd5d347bcf8308/tqdm-4.19.5-py2.py3-none-any.whl\n",
      "Collecting zipline===1.2.0 (from -r requirements.txt (line 16))\n",
      "  Using cached https://files.pythonhosted.org/packages/15/d3/689f2a940478b82ac57c751a40460598221fd82b0449a7a8f7eef47a3bcc/zipline-1.2.0.tar.gz\n",
      "Collecting graphviz==0.9 (from -r requirements.txt (line 17))\n",
      "  Using cached https://files.pythonhosted.org/packages/47/87/313cd4ea4f75472826acb74c57f94fc83e04ba93e4ccf35656f6b7f502e2/graphviz-0.9-py2.py3-none-any.whl\n",
      "Requirement already satisfied: matplotlib>=1.4.0 in /opt/conda/lib/python3.6/site-packages (from alphalens==0.3.2->-r requirements.txt (line 1)) (2.1.0)\n",
      "Requirement already satisfied: seaborn>=0.6.0 in /opt/conda/lib/python3.6/site-packages (from alphalens==0.3.2->-r requirements.txt (line 1)) (0.8.1)\n",
      "Requirement already satisfied: statsmodels>=0.6.1 in /opt/conda/lib/python3.6/site-packages (from alphalens==0.3.2->-r requirements.txt (line 1)) (0.8.0)\n",
      "Requirement already satisfied: IPython>=3.2.3 in /opt/conda/lib/python3.6/site-packages (from alphalens==0.3.2->-r requirements.txt (line 1)) (6.5.0)\n",
      "Collecting osqp (from cvxpy==1.0.3->-r requirements.txt (line 3))\n",
      "  Using cached https://files.pythonhosted.org/packages/c0/01/8becb29b0d38e0c40eab9e3d54aa8138fa62a010d519caf65e9210021bd3/osqp-0.5.0-cp36-cp36m-manylinux1_x86_64.whl\n",
      "Collecting ecos>=2 (from cvxpy==1.0.3->-r requirements.txt (line 3))\n",
      "  Using cached https://files.pythonhosted.org/packages/55/ed/d131ff51f3a8f73420eb1191345eb49f269f23cadef515172e356018cde3/ecos-2.0.7.post1-cp36-cp36m-manylinux1_x86_64.whl\n",
      "Collecting scs>=1.1.3 (from cvxpy==1.0.3->-r requirements.txt (line 3))\n",
      "  Using cached https://files.pythonhosted.org/packages/07/a7/0b19c8f9476a4762d296c6c5fa860f2fe580a4f579fa53aaa8515f4ca217/scs-2.1.0.tar.gz\n",
      "Collecting multiprocess (from cvxpy==1.0.3->-r requirements.txt (line 3))\n",
      "  Using cached https://files.pythonhosted.org/packages/31/60/6d74caa02b54ca43092e745640c7d98f367f07160441682a01602ce00bc5/multiprocess-0.70.7.tar.gz\n",
      "Requirement already satisfied: fastcache in /opt/conda/lib/python3.6/site-packages (from cvxpy==1.0.3->-r requirements.txt (line 3)) (1.0.2)\n",
      "Requirement already satisfied: toolz in /opt/conda/lib/python3.6/site-packages (from cvxpy==1.0.3->-r requirements.txt (line 3)) (0.8.2)\n",
      "Requirement already satisfied: decorator>=4.0.6 in /opt/conda/lib/python3.6/site-packages (from plotly==2.2.3->-r requirements.txt (line 7)) (4.0.11)\n",
      "Requirement already satisfied: nbformat>=4.2 in /opt/conda/lib/python3.6/site-packages (from plotly==2.2.3->-r requirements.txt (line 7)) (4.4.0)\n",
      "Requirement already satisfied: chardet<3.1.0,>=3.0.2 in /opt/conda/lib/python3.6/site-packages (from requests==2.18.4->-r requirements.txt (line 11)) (3.0.4)\n",
      "Requirement already satisfied: idna<2.7,>=2.5 in /opt/conda/lib/python3.6/site-packages (from requests==2.18.4->-r requirements.txt (line 11)) (2.6)\n",
      "Requirement already satisfied: urllib3<1.23,>=1.21.1 in /opt/conda/lib/python3.6/site-packages (from requests==2.18.4->-r requirements.txt (line 11)) (1.22)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.6/site-packages (from requests==2.18.4->-r requirements.txt (line 11)) (2017.11.5)\n",
      "Requirement already satisfied: pip>=7.1.0 in /opt/conda/lib/python3.6/site-packages (from zipline===1.2.0->-r requirements.txt (line 16)) (18.1)\n",
      "Requirement already satisfied: setuptools>18.0 in /opt/conda/lib/python3.6/site-packages (from zipline===1.2.0->-r requirements.txt (line 16)) (38.4.0)\n",
      "Collecting Logbook>=0.12.5 (from zipline===1.2.0->-r requirements.txt (line 16))\n",
      "  Using cached https://files.pythonhosted.org/packages/f6/83/20fc0270614919cb799f76e32cf143a54c58ce2fa45c19fd38ac2e4f9977/Logbook-1.4.3.tar.gz\n",
      "Collecting requests-file>=1.4.1 (from zipline===1.2.0->-r requirements.txt (line 16))\n",
      "  Using cached https://files.pythonhosted.org/packages/23/9c/6e63c23c39e53d3df41c77a3d05a49a42c4e1383a6d2a5e3233161b89dbf/requests_file-1.4.3-py2.py3-none-any.whl\n",
      "Collecting pandas-datareader<0.6,>=0.2.1 (from zipline===1.2.0->-r requirements.txt (line 16))\n",
      "  Using cached https://files.pythonhosted.org/packages/40/c5/cc720f531bbde0efeab940de400d0fcc95e87770a3abcd7f90d6d52a3302/pandas_datareader-0.5.0-py2.py3-none-any.whl\n",
      "Requirement already satisfied: patsy>=0.4.0 in /opt/conda/lib/python3.6/site-packages (from zipline===1.2.0->-r requirements.txt (line 16)) (0.4.1)\n",
      "Requirement already satisfied: Cython>=0.25.2 in /opt/conda/lib/python3.6/site-packages (from zipline===1.2.0->-r requirements.txt (line 16)) (0.29.7)\n",
      "Collecting cyordereddict>=0.2.2 (from zipline===1.2.0->-r requirements.txt (line 16))\n",
      "  Using cached https://files.pythonhosted.org/packages/d1/1a/364cbfd927be1b743c7f0a985a7f1f7e8a51469619f9fefe4ee9240ba210/cyordereddict-1.0.0.tar.gz\n",
      "Collecting bottleneck>=1.0.0 (from zipline===1.2.0->-r requirements.txt (line 16))\n",
      "  Using cached https://files.pythonhosted.org/packages/05/ae/cedf5323f398ab4e4ff92d6c431a3e1c6a186f9b41ab3e8258dff786a290/Bottleneck-1.2.1.tar.gz\n",
      "Collecting contextlib2>=0.4.0 (from zipline===1.2.0->-r requirements.txt (line 16))\n",
      "  Using cached https://files.pythonhosted.org/packages/a2/71/8273a7eeed0aff6a854237ab5453bc9aa67deb49df4832801c21f0ff3782/contextlib2-0.5.5-py2.py3-none-any.whl\n",
      "Requirement already satisfied: networkx<2.0,>=1.9.1 in /opt/conda/lib/python3.6/site-packages (from zipline===1.2.0->-r requirements.txt (line 16)) (1.11)\n",
      "Requirement already satisfied: numexpr>=2.6.1 in /opt/conda/lib/python3.6/site-packages (from zipline===1.2.0->-r requirements.txt (line 16)) (2.6.4)\n",
      "Collecting bcolz<1,>=0.12.1 (from zipline===1.2.0->-r requirements.txt (line 16))\n",
      "  Using cached https://files.pythonhosted.org/packages/6c/8b/1ffa01f872cac36173c5eb95b58c01040d8d25f1b242c48577f4104cd3ab/bcolz-0.12.1.tar.gz\n",
      "Requirement already satisfied: click>=4.0.0 in /opt/conda/lib/python3.6/site-packages (from zipline===1.2.0->-r requirements.txt (line 16)) (6.7)\n",
      "Collecting multipledispatch>=0.4.8 (from zipline===1.2.0->-r requirements.txt (line 16))\n",
      "  Using cached https://files.pythonhosted.org/packages/89/79/429ecef45fd5e4504f7474d4c3c3c4668c267be3370e4c2fd33e61506833/multipledispatch-0.6.0-py3-none-any.whl\n",
      "Requirement already satisfied: MarkupSafe>=0.23 in /opt/conda/lib/python3.6/site-packages (from zipline===1.2.0->-r requirements.txt (line 16)) (1.0)\n",
      "Requirement already satisfied: Mako>=1.0.1 in /opt/conda/lib/python3.6/site-packages/Mako-1.0.7-py3.6.egg (from zipline===1.2.0->-r requirements.txt (line 16)) (1.0.7)\n",
      "Requirement already satisfied: sqlalchemy>=1.0.8 in /opt/conda/lib/python3.6/site-packages (from zipline===1.2.0->-r requirements.txt (line 16)) (1.1.13)\n",
      "Collecting alembic>=0.7.7 (from zipline===1.2.0->-r requirements.txt (line 16))\n",
      "  Using cached https://files.pythonhosted.org/packages/6e/8b/fa3bd058cccd5e9177fea4efa26bfb769228fdd3178436ad5e05830ef6ef/alembic-1.0.10.tar.gz\n",
      "Collecting sortedcontainers>=1.4.4 (from zipline===1.2.0->-r requirements.txt (line 16))\n",
      "  Using cached https://files.pythonhosted.org/packages/13/f3/cf85f7c3a2dbd1a515d51e1f1676d971abe41bba6f4ab5443240d9a78e5b/sortedcontainers-2.1.0-py2.py3-none-any.whl\n",
      "Collecting intervaltree>=2.1.0 (from zipline===1.2.0->-r requirements.txt (line 16))\n",
      "  Using cached https://files.pythonhosted.org/packages/e8/f9/76237755b2020cd74549e98667210b2dd54d3fb17c6f4a62631e61d31225/intervaltree-3.0.2.tar.gz\n",
      "Collecting lru-dict>=1.1.4 (from zipline===1.2.0->-r requirements.txt (line 16))\n",
      "  Using cached https://files.pythonhosted.org/packages/00/a5/32ed6e10246cd341ca8cc205acea5d208e4053f48a4dced2b1b31d45ba3f/lru-dict-1.1.6.tar.gz\n",
      "Collecting empyrical>=0.4.2 (from zipline===1.2.0->-r requirements.txt (line 16))\n",
      "  Using cached https://files.pythonhosted.org/packages/7b/55/a01b05162b764830dbbac868462f44cd847a5b6523a01ca9f955721819da/empyrical-0.5.0.tar.gz\n",
      "Collecting tables>=3.3.0 (from zipline===1.2.0->-r requirements.txt (line 16))\n",
      "  Using cached https://files.pythonhosted.org/packages/87/f7/bb0ec32a3f3dd74143a3108fbf737e6dcfd47f0ffd61b52af7106ab7a38a/tables-3.5.2-cp36-cp36m-manylinux1_x86_64.whl\n",
      "Requirement already satisfied: pickleshare in /opt/conda/lib/python3.6/site-packages (from IPython>=3.2.3->alphalens==0.3.2->-r requirements.txt (line 1)) (0.7.4)\n",
      "Requirement already satisfied: traitlets>=4.2 in /opt/conda/lib/python3.6/site-packages (from IPython>=3.2.3->alphalens==0.3.2->-r requirements.txt (line 1)) (4.3.2)\n",
      "Requirement already satisfied: pexpect; sys_platform != \"win32\" in /opt/conda/lib/python3.6/site-packages (from IPython>=3.2.3->alphalens==0.3.2->-r requirements.txt (line 1)) (4.3.1)\n",
      "Requirement already satisfied: simplegeneric>0.8 in /opt/conda/lib/python3.6/site-packages (from IPython>=3.2.3->alphalens==0.3.2->-r requirements.txt (line 1)) (0.8.1)\n",
      "Requirement already satisfied: prompt-toolkit<2.0.0,>=1.0.15 in /opt/conda/lib/python3.6/site-packages (from IPython>=3.2.3->alphalens==0.3.2->-r requirements.txt (line 1)) (1.0.15)\n",
      "Requirement already satisfied: backcall in /opt/conda/lib/python3.6/site-packages (from IPython>=3.2.3->alphalens==0.3.2->-r requirements.txt (line 1)) (0.1.0)\n",
      "Requirement already satisfied: pygments in /opt/conda/lib/python3.6/site-packages (from IPython>=3.2.3->alphalens==0.3.2->-r requirements.txt (line 1)) (2.2.0)\n",
      "Requirement already satisfied: jedi>=0.10 in /opt/conda/lib/python3.6/site-packages (from IPython>=3.2.3->alphalens==0.3.2->-r requirements.txt (line 1)) (0.10.2)\n",
      "Requirement already satisfied: future in /opt/conda/lib/python3.6/site-packages (from osqp->cvxpy==1.0.3->-r requirements.txt (line 3)) (0.16.0)\n",
      "Collecting dill>=0.2.9 (from multiprocess->cvxpy==1.0.3->-r requirements.txt (line 3))\n",
      "  Using cached https://files.pythonhosted.org/packages/fe/42/bfe2e0857bc284cbe6a011d93f2a9ad58a22cb894461b199ae72cfef0f29/dill-0.2.9.tar.gz\n",
      "Requirement already satisfied: ipython-genutils in /opt/conda/lib/python3.6/site-packages (from nbformat>=4.2->plotly==2.2.3->-r requirements.txt (line 7)) (0.2.0)\n",
      "Requirement already satisfied: jupyter-core in /opt/conda/lib/python3.6/site-packages (from nbformat>=4.2->plotly==2.2.3->-r requirements.txt (line 7)) (4.4.0)\n",
      "Requirement already satisfied: jsonschema!=2.5.0,>=2.4 in /opt/conda/lib/python3.6/site-packages (from nbformat>=4.2->plotly==2.2.3->-r requirements.txt (line 7)) (2.6.0)\n",
      "Collecting requests-ftp (from pandas-datareader<0.6,>=0.2.1->zipline===1.2.0->-r requirements.txt (line 16))\n",
      "  Using cached https://files.pythonhosted.org/packages/3d/ca/14b2ad1e93b5195eeaf56b86b7ecfd5ea2d5754a68d17aeb1e5b9f95b3cf/requests-ftp-0.3.1.tar.gz\n",
      "Collecting python-editor>=0.3 (from alembic>=0.7.7->zipline===1.2.0->-r requirements.txt (line 16))\n",
      "  Using cached https://files.pythonhosted.org/packages/c6/d3/201fc3abe391bbae6606e6f1d598c15d367033332bd54352b12f35513717/python_editor-1.0.4-py3-none-any.whl\n",
      "Requirement already satisfied: mock>=2.0 in /opt/conda/lib/python3.6/site-packages (from tables>=3.3.0->zipline===1.2.0->-r requirements.txt (line 16)) (2.0.0)\n",
      "Requirement already satisfied: ptyprocess>=0.5 in /opt/conda/lib/python3.6/site-packages (from pexpect; sys_platform != \"win32\"->IPython>=3.2.3->alphalens==0.3.2->-r requirements.txt (line 1)) (0.5.2)\n",
      "Requirement already satisfied: wcwidth in /opt/conda/lib/python3.6/site-packages (from prompt-toolkit<2.0.0,>=1.0.15->IPython>=3.2.3->alphalens==0.3.2->-r requirements.txt (line 1)) (0.1.7)\n",
      "Requirement already satisfied: pbr>=0.11 in /opt/conda/lib/python3.6/site-packages (from mock>=2.0->tables>=3.3.0->zipline===1.2.0->-r requirements.txt (line 16)) (3.1.1)\n",
      "Building wheels for collected packages: alphalens, cvxpy, pandas, plotly, zipline, scs, multiprocess, Logbook, cyordereddict, bottleneck, bcolz, alembic, intervaltree, lru-dict, empyrical, dill, requests-ftp\n",
      "  Running setup.py bdist_wheel for alphalens ... \u001b[?25ldone\n",
      "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/77/1e/9a/223b4c94d7f564f25d94b48ca5b9c53e3034016ece3fd8c8c1\n",
      "  Running setup.py bdist_wheel for cvxpy ... \u001b[?25ldone\n",
      "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/2b/60/0b/0c2596528665e21d698d6f84a3406c52044c7b4ca6ac737cf3\n",
      "  Running setup.py bdist_wheel for pandas ... \u001b[?25ldone\n",
      "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/a3/08/c3/8fdd52954d4b415624cff43c6dd32a22bac90306976a98f4af\n",
      "  Running setup.py bdist_wheel for plotly ... \u001b[?25ldone\n",
      "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/98/54/81/dd92d5b0858fac680cd7bdb8800eb26c001dd9f5dc8b1bc0ba\n",
      "  Running setup.py bdist_wheel for zipline ... \u001b[?25ldone\n",
      "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/5d/20/7d/b48368c8634b1cb6cc7232833b2780a265d4217c0ad2e3d24c\n",
      "  Running setup.py bdist_wheel for scs ... \u001b[?25ldone\n",
      "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/94/e2/a6/64db723051c54017c248ea5a26e7f1459c0242d735a496dd55\n",
      "  Running setup.py bdist_wheel for multiprocess ... \u001b[?25ldone\n",
      "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/3a/ed/51/77c833462c3e757ce50c4b2b68bdf53f5d1745542fe567d740\n",
      "  Running setup.py bdist_wheel for Logbook ... \u001b[?25ldone\n",
      "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/a2/9f/6f/8c7a4ed6b9f6f3c98b742dbb0fd41fff3c130119c507376301\n",
      "  Running setup.py bdist_wheel for cyordereddict ... \u001b[?25ldone\n",
      "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/0b/9d/8b/5bf3e22c1edd59b50f11bb19dec9dfcfe5a479fc7ace02b61f\n",
      "  Running setup.py bdist_wheel for bottleneck ... \u001b[?25ldone\n",
      "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/f2/bf/ec/e0f39aa27001525ad455139ee57ec7d0776fe074dfd78c97e4\n",
      "  Running setup.py bdist_wheel for bcolz ... \u001b[?25ldone\n",
      "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/c5/cc/1b/2cf1f88959af5d7f4d449b7fc6c9452d0ecbd86fd61a9ee376\n",
      "  Running setup.py bdist_wheel for alembic ... \u001b[?25ldone\n",
      "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/de/cf/b3/0eb5c89ea6aa1b49cb41315f9ec139ada8cbffd575bf170d43\n",
      "  Running setup.py bdist_wheel for intervaltree ... \u001b[?25ldone\n",
      "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/08/99/c0/5a5942f5b9567c59c14aac76f95a70bf11dccc71240b91ebf5\n",
      "  Running setup.py bdist_wheel for lru-dict ... \u001b[?25ldone\n",
      "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/b7/ef/06/fbdd555907a7d438fb33e4c8675f771ff1cf41917284c51ebf\n",
      "  Running setup.py bdist_wheel for empyrical ... \u001b[?25ldone\n",
      "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/83/14/73/34fb27552601518d28bd0813d75124be76d94ab29152c69112\n",
      "  Running setup.py bdist_wheel for dill ... \u001b[?25ldone\n",
      "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/5b/d7/0f/e58eae695403de585269f4e4a94e0cd6ca60ec0c202936fa4a\n",
      "  Running setup.py bdist_wheel for requests-ftp ... \u001b[?25ldone\n",
      "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/2a/98/32/37195e45a3392a73d9f65c488cbea30fe5bad76aaef4d6b020\n",
      "Successfully built alphalens cvxpy pandas plotly zipline scs multiprocess Logbook cyordereddict bottleneck bcolz alembic intervaltree lru-dict empyrical dill requests-ftp\n",
      "\u001b[31mtensorflow 1.3.0 requires tensorflow-tensorboard<0.2.0,>=0.1.0, which is not installed.\u001b[0m\n",
      "\u001b[31mmoviepy 0.2.3.2 has requirement tqdm==4.11.2, but you'll have tqdm 4.19.5 which is incompatible.\u001b[0m\n",
      "Installing collected packages: numpy, pandas, scipy, alphalens, osqp, ecos, scs, dill, multiprocess, cvxpy, plotly, tqdm, Logbook, requests-file, requests-ftp, pandas-datareader, cyordereddict, bottleneck, contextlib2, bcolz, multipledispatch, python-editor, alembic, sortedcontainers, intervaltree, lru-dict, empyrical, tables, zipline, graphviz\n",
      "  Found existing installation: numpy 1.12.1\n",
      "    Can't uninstall 'numpy'. No files were found to uninstall.\n",
      "  Found existing installation: pandas 0.23.3\n",
      "    Can't uninstall 'pandas'. No files were found to uninstall.\n",
      "  Found existing installation: scipy 0.19.1\n",
      "    Can't uninstall 'scipy'. No files were found to uninstall.\n",
      "  Found existing installation: dill 0.2.7.1\n",
      "    Can't uninstall 'dill'. No files were found to uninstall.\n",
      "  Found existing installation: plotly 2.0.15\n",
      "    Can't uninstall 'plotly'. No files were found to uninstall.\n",
      "  Found existing installation: tqdm 4.11.2\n",
      "    Can't uninstall 'tqdm'. No files were found to uninstall.\n",
      "Successfully installed Logbook-1.4.3 alembic-1.0.10 alphalens-0.3.2 bcolz-0.12.1 bottleneck-1.2.1 contextlib2-0.5.5 cvxpy-1.0.3 cyordereddict-1.0.0 dill-0.2.9 ecos-2.0.7.post1 empyrical-0.5.0 graphviz-0.9 intervaltree-3.0.2 lru-dict-1.1.6 multipledispatch-0.6.0 multiprocess-0.70.7 numpy-1.14.5 osqp-0.5.0 pandas-0.18.1 pandas-datareader-0.5.0 plotly-2.2.3 python-editor-1.0.4 requests-file-1.4.3 requests-ftp-0.3.1 scipy-1.0.0 scs-2.1.0 sortedcontainers-2.1.0 tables-3.5.2 tqdm-4.19.5 zipline-1.2.0\n"
     ]
    }
   ],
   "source": [
    "!{sys.executable} -m pip install -r requirements.txt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import cvxpy as cvx\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import time\n",
    "import os\n",
    "import quiz_helper\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "plt.style.use('ggplot')\n",
    "plt.rcParams['figure.figsize'] = (14, 8)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### data bundle"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import quiz_helper\n",
    "from zipline.data import bundles"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data Registered\n"
     ]
    }
   ],
   "source": [
    "os.environ['ZIPLINE_ROOT'] = os.path.join(os.getcwd(), '..', '..','data','module_4_quizzes_eod')\n",
    "ingest_func = bundles.csvdir.csvdir_equities(['daily'], quiz_helper.EOD_BUNDLE_NAME)\n",
    "bundles.register(quiz_helper.EOD_BUNDLE_NAME, ingest_func)\n",
    "print('Data Registered')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Build pipeline engine"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "from zipline.pipeline import Pipeline\n",
    "from zipline.pipeline.factors import AverageDollarVolume\n",
    "from zipline.utils.calendars import get_calendar\n",
    "\n",
    "universe = AverageDollarVolume(window_length=120).top(500) \n",
    "trading_calendar = get_calendar('NYSE') \n",
    "bundle_data = bundles.load(quiz_helper.EOD_BUNDLE_NAME)\n",
    "engine = quiz_helper.build_pipeline_engine(bundle_data, trading_calendar)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### View Data¶\n",
    "With the pipeline engine built, let's get the stocks at the end of the period in the universe we're using. We'll use these tickers to generate the returns data for the our risk model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Equity(0 [A]),\n",
       " Equity(1 [AAL]),\n",
       " Equity(2 [AAP]),\n",
       " Equity(3 [AAPL]),\n",
       " Equity(4 [ABBV]),\n",
       " Equity(5 [ABC]),\n",
       " Equity(6 [ABT]),\n",
       " Equity(7 [ACN]),\n",
       " Equity(8 [ADBE]),\n",
       " Equity(9 [ADI]),\n",
       " Equity(10 [ADM]),\n",
       " Equity(11 [ADP]),\n",
       " Equity(12 [ADS]),\n",
       " Equity(13 [ADSK]),\n",
       " Equity(14 [AEE]),\n",
       " Equity(15 [AEP]),\n",
       " Equity(16 [AES]),\n",
       " Equity(17 [AET]),\n",
       " Equity(18 [AFL]),\n",
       " Equity(19 [AGN]),\n",
       " Equity(20 [AIG]),\n",
       " Equity(21 [AIV]),\n",
       " Equity(22 [AIZ]),\n",
       " Equity(23 [AJG]),\n",
       " Equity(24 [AKAM]),\n",
       " Equity(25 [ALB]),\n",
       " Equity(26 [ALGN]),\n",
       " Equity(27 [ALK]),\n",
       " Equity(28 [ALL]),\n",
       " Equity(29 [ALLE]),\n",
       " Equity(30 [ALXN]),\n",
       " Equity(31 [AMAT]),\n",
       " Equity(32 [AMD]),\n",
       " Equity(33 [AME]),\n",
       " Equity(34 [AMG]),\n",
       " Equity(35 [AMGN]),\n",
       " Equity(36 [AMP]),\n",
       " Equity(37 [AMT]),\n",
       " Equity(38 [AMZN]),\n",
       " Equity(39 [ANDV]),\n",
       " Equity(40 [ANSS]),\n",
       " Equity(41 [ANTM]),\n",
       " Equity(42 [AON]),\n",
       " Equity(43 [AOS]),\n",
       " Equity(44 [APA]),\n",
       " Equity(45 [APC]),\n",
       " Equity(46 [APD]),\n",
       " Equity(47 [APH]),\n",
       " Equity(48 [ARE]),\n",
       " Equity(49 [ARNC]),\n",
       " Equity(50 [ATVI]),\n",
       " Equity(51 [AVB]),\n",
       " Equity(52 [AVGO]),\n",
       " Equity(53 [AVY]),\n",
       " Equity(54 [AWK]),\n",
       " Equity(55 [AXP]),\n",
       " Equity(56 [AYI]),\n",
       " Equity(57 [AZO]),\n",
       " Equity(58 [BA]),\n",
       " Equity(59 [BAC]),\n",
       " Equity(60 [BAX]),\n",
       " Equity(61 [BBT]),\n",
       " Equity(62 [BBY]),\n",
       " Equity(63 [BCR]),\n",
       " Equity(64 [BDX]),\n",
       " Equity(65 [BEN]),\n",
       " Equity(66 [BIIB]),\n",
       " Equity(67 [BK]),\n",
       " Equity(68 [BLK]),\n",
       " Equity(69 [BLL]),\n",
       " Equity(70 [BMY]),\n",
       " Equity(71 [BSX]),\n",
       " Equity(72 [BWA]),\n",
       " Equity(73 [BXP]),\n",
       " Equity(74 [C]),\n",
       " Equity(75 [CA]),\n",
       " Equity(76 [CAG]),\n",
       " Equity(77 [CAH]),\n",
       " Equity(78 [CAT]),\n",
       " Equity(79 [CB]),\n",
       " Equity(80 [CBG]),\n",
       " Equity(81 [CBOE]),\n",
       " Equity(82 [CBS]),\n",
       " Equity(83 [CCI]),\n",
       " Equity(84 [CCL]),\n",
       " Equity(85 [CELG]),\n",
       " Equity(86 [CERN]),\n",
       " Equity(87 [CF]),\n",
       " Equity(88 [CFG]),\n",
       " Equity(89 [CHD]),\n",
       " Equity(90 [CHK]),\n",
       " Equity(91 [CHRW]),\n",
       " Equity(92 [CHTR]),\n",
       " Equity(93 [CI]),\n",
       " Equity(94 [CINF]),\n",
       " Equity(95 [CL]),\n",
       " Equity(96 [CLX]),\n",
       " Equity(97 [CMA]),\n",
       " Equity(98 [CMCSA]),\n",
       " Equity(99 [CME]),\n",
       " Equity(100 [CMG]),\n",
       " Equity(101 [CMI]),\n",
       " Equity(102 [CMS]),\n",
       " Equity(103 [CNC]),\n",
       " Equity(104 [CNP]),\n",
       " Equity(105 [COF]),\n",
       " Equity(106 [COG]),\n",
       " Equity(107 [COL]),\n",
       " Equity(108 [COO]),\n",
       " Equity(109 [COP]),\n",
       " Equity(110 [COST]),\n",
       " Equity(111 [COTY]),\n",
       " Equity(112 [CPB]),\n",
       " Equity(113 [CRM]),\n",
       " Equity(114 [CSCO]),\n",
       " Equity(115 [CSRA]),\n",
       " Equity(116 [CSX]),\n",
       " Equity(117 [CTAS]),\n",
       " Equity(118 [CTL]),\n",
       " Equity(119 [CTSH]),\n",
       " Equity(120 [CTXS]),\n",
       " Equity(121 [CVS]),\n",
       " Equity(122 [CVX]),\n",
       " Equity(123 [CXO]),\n",
       " Equity(124 [D]),\n",
       " Equity(125 [DAL]),\n",
       " Equity(126 [DE]),\n",
       " Equity(127 [DFS]),\n",
       " Equity(128 [DG]),\n",
       " Equity(129 [DGX]),\n",
       " Equity(130 [DHI]),\n",
       " Equity(131 [DHR]),\n",
       " Equity(132 [DIS]),\n",
       " Equity(133 [DISCA]),\n",
       " Equity(134 [DISCK]),\n",
       " Equity(135 [DISH]),\n",
       " Equity(136 [DLR]),\n",
       " Equity(137 [DLTR]),\n",
       " Equity(138 [DOV]),\n",
       " Equity(139 [DPS]),\n",
       " Equity(140 [DRE]),\n",
       " Equity(141 [DRI]),\n",
       " Equity(142 [DTE]),\n",
       " Equity(143 [DUK]),\n",
       " Equity(144 [DVA]),\n",
       " Equity(145 [DVN]),\n",
       " Equity(146 [EA]),\n",
       " Equity(147 [EBAY]),\n",
       " Equity(148 [ECL]),\n",
       " Equity(149 [ED]),\n",
       " Equity(150 [EFX]),\n",
       " Equity(151 [EIX]),\n",
       " Equity(152 [EL]),\n",
       " Equity(153 [EMN]),\n",
       " Equity(154 [EMR]),\n",
       " Equity(155 [EOG]),\n",
       " Equity(156 [EQIX]),\n",
       " Equity(157 [EQR]),\n",
       " Equity(158 [EQT]),\n",
       " Equity(159 [ES]),\n",
       " Equity(160 [ESRX]),\n",
       " Equity(161 [ESS]),\n",
       " Equity(162 [ETFC]),\n",
       " Equity(163 [ETN]),\n",
       " Equity(164 [ETR]),\n",
       " Equity(165 [EVHC]),\n",
       " Equity(166 [EW]),\n",
       " Equity(167 [EXC]),\n",
       " Equity(168 [EXPD]),\n",
       " Equity(169 [EXPE]),\n",
       " Equity(170 [EXR]),\n",
       " Equity(171 [F]),\n",
       " Equity(172 [FAST]),\n",
       " Equity(173 [FB]),\n",
       " Equity(174 [FBHS]),\n",
       " Equity(175 [FCX]),\n",
       " Equity(176 [FDX]),\n",
       " Equity(177 [FE]),\n",
       " Equity(178 [FFIV]),\n",
       " Equity(179 [FIS]),\n",
       " Equity(180 [FISV]),\n",
       " Equity(181 [FITB]),\n",
       " Equity(182 [FL]),\n",
       " Equity(183 [FLIR]),\n",
       " Equity(184 [FLR]),\n",
       " Equity(185 [FLS]),\n",
       " Equity(186 [FMC]),\n",
       " Equity(187 [FOX]),\n",
       " Equity(188 [FOXA]),\n",
       " Equity(189 [FRT]),\n",
       " Equity(190 [FTI]),\n",
       " Equity(191 [GD]),\n",
       " Equity(192 [GE]),\n",
       " Equity(193 [GGP]),\n",
       " Equity(194 [GILD]),\n",
       " Equity(195 [GIS]),\n",
       " Equity(196 [GLW]),\n",
       " Equity(197 [GM]),\n",
       " Equity(198 [GOOG]),\n",
       " Equity(199 [GOOGL]),\n",
       " Equity(200 [GPC]),\n",
       " Equity(201 [GPN]),\n",
       " Equity(202 [GPS]),\n",
       " Equity(203 [GRMN]),\n",
       " Equity(204 [GS]),\n",
       " Equity(205 [GT]),\n",
       " Equity(206 [GWW]),\n",
       " Equity(207 [HAL]),\n",
       " Equity(208 [HAS]),\n",
       " Equity(209 [HBAN]),\n",
       " Equity(210 [HBI]),\n",
       " Equity(211 [HCA]),\n",
       " Equity(212 [HCN]),\n",
       " Equity(213 [HCP]),\n",
       " Equity(214 [HD]),\n",
       " Equity(215 [HES]),\n",
       " Equity(216 [HIG]),\n",
       " Equity(217 [HLT]),\n",
       " Equity(218 [HOG]),\n",
       " Equity(219 [HOLX]),\n",
       " Equity(220 [HON]),\n",
       " Equity(221 [HP]),\n",
       " Equity(222 [HPE]),\n",
       " Equity(223 [HPQ]),\n",
       " Equity(224 [HRB]),\n",
       " Equity(225 [HRL]),\n",
       " Equity(226 [HRS]),\n",
       " Equity(227 [HSIC]),\n",
       " Equity(228 [HST]),\n",
       " Equity(229 [HSY]),\n",
       " Equity(230 [HUM]),\n",
       " Equity(231 [IBM]),\n",
       " Equity(232 [ICE]),\n",
       " Equity(233 [IDXX]),\n",
       " Equity(234 [IFF]),\n",
       " Equity(235 [ILMN]),\n",
       " Equity(236 [INCY]),\n",
       " Equity(237 [INFO]),\n",
       " Equity(238 [INTC]),\n",
       " Equity(239 [INTU]),\n",
       " Equity(240 [IP]),\n",
       " Equity(241 [IPG]),\n",
       " Equity(242 [IR]),\n",
       " Equity(243 [IRM]),\n",
       " Equity(244 [ISRG]),\n",
       " Equity(245 [IT]),\n",
       " Equity(246 [ITW]),\n",
       " Equity(247 [IVZ]),\n",
       " Equity(248 [JBHT]),\n",
       " Equity(249 [JCI]),\n",
       " Equity(250 [JEC]),\n",
       " Equity(251 [JNJ]),\n",
       " Equity(252 [JNPR]),\n",
       " Equity(253 [JPM]),\n",
       " Equity(254 [JWN]),\n",
       " Equity(255 [K]),\n",
       " Equity(256 [KEY]),\n",
       " Equity(257 [KHC]),\n",
       " Equity(258 [KIM]),\n",
       " Equity(259 [KLAC]),\n",
       " Equity(260 [KMB]),\n",
       " Equity(261 [KMI]),\n",
       " Equity(262 [KMX]),\n",
       " Equity(263 [KO]),\n",
       " Equity(264 [KORS]),\n",
       " Equity(265 [KR]),\n",
       " Equity(266 [KSS]),\n",
       " Equity(267 [KSU]),\n",
       " Equity(268 [L]),\n",
       " Equity(269 [LB]),\n",
       " Equity(270 [LEG]),\n",
       " Equity(271 [LEN]),\n",
       " Equity(272 [LH]),\n",
       " Equity(273 [LKQ]),\n",
       " Equity(274 [LLL]),\n",
       " Equity(275 [LLY]),\n",
       " Equity(276 [LMT]),\n",
       " Equity(277 [LNC]),\n",
       " Equity(278 [LNT]),\n",
       " Equity(279 [LOW]),\n",
       " Equity(280 [LRCX]),\n",
       " Equity(281 [LUK]),\n",
       " Equity(282 [LUV]),\n",
       " Equity(283 [LVLT]),\n",
       " Equity(284 [LYB]),\n",
       " Equity(285 [M]),\n",
       " Equity(286 [MA]),\n",
       " Equity(287 [MAA]),\n",
       " Equity(288 [MAC]),\n",
       " Equity(289 [MAR]),\n",
       " Equity(290 [MAS]),\n",
       " Equity(291 [MAT]),\n",
       " Equity(292 [MCD]),\n",
       " Equity(293 [MCHP]),\n",
       " Equity(294 [MCK]),\n",
       " Equity(295 [MCO]),\n",
       " Equity(296 [MDLZ]),\n",
       " Equity(297 [MDT]),\n",
       " Equity(298 [MET]),\n",
       " Equity(299 [MGM]),\n",
       " Equity(300 [MHK]),\n",
       " Equity(301 [MKC]),\n",
       " Equity(302 [MLM]),\n",
       " Equity(303 [MMC]),\n",
       " Equity(304 [MNST]),\n",
       " Equity(305 [MO]),\n",
       " Equity(306 [MON]),\n",
       " Equity(307 [MOS]),\n",
       " Equity(308 [MPC]),\n",
       " Equity(309 [MRK]),\n",
       " Equity(310 [MRO]),\n",
       " Equity(311 [MS]),\n",
       " Equity(312 [MSFT]),\n",
       " Equity(313 [MSI]),\n",
       " Equity(314 [MTB]),\n",
       " Equity(315 [MTD]),\n",
       " Equity(316 [MU]),\n",
       " Equity(317 [MYL]),\n",
       " Equity(318 [NAVI]),\n",
       " Equity(319 [NBL]),\n",
       " Equity(320 [NDAQ]),\n",
       " Equity(321 [NEE]),\n",
       " Equity(322 [NEM]),\n",
       " Equity(323 [NFLX]),\n",
       " Equity(324 [NFX]),\n",
       " Equity(325 [NI]),\n",
       " Equity(326 [NKE]),\n",
       " Equity(327 [NLSN]),\n",
       " Equity(328 [NOC]),\n",
       " Equity(329 [NOV]),\n",
       " Equity(330 [NRG]),\n",
       " Equity(331 [NSC]),\n",
       " Equity(332 [NTAP]),\n",
       " Equity(333 [NTRS]),\n",
       " Equity(334 [NUE]),\n",
       " Equity(335 [NVDA]),\n",
       " Equity(336 [NWL]),\n",
       " Equity(337 [NWS]),\n",
       " Equity(338 [NWSA]),\n",
       " Equity(339 [O]),\n",
       " Equity(340 [OKE]),\n",
       " Equity(341 [OMC]),\n",
       " Equity(342 [ORCL]),\n",
       " Equity(343 [ORLY]),\n",
       " Equity(344 [OXY]),\n",
       " Equity(345 [PAYX]),\n",
       " Equity(346 [PBCT]),\n",
       " Equity(347 [PCAR]),\n",
       " Equity(348 [PCG]),\n",
       " Equity(349 [PDCO]),\n",
       " Equity(350 [PEG]),\n",
       " Equity(351 [PEP]),\n",
       " Equity(352 [PFE]),\n",
       " Equity(353 [PFG]),\n",
       " Equity(354 [PG]),\n",
       " Equity(355 [PGR]),\n",
       " Equity(356 [PH]),\n",
       " Equity(357 [PHM]),\n",
       " Equity(358 [PKG]),\n",
       " Equity(359 [PKI]),\n",
       " Equity(360 [PLD]),\n",
       " Equity(361 [PM]),\n",
       " Equity(362 [PNC]),\n",
       " Equity(363 [PNR]),\n",
       " Equity(364 [PNW]),\n",
       " Equity(365 [PPG]),\n",
       " Equity(366 [PPL]),\n",
       " Equity(367 [PRGO]),\n",
       " Equity(368 [PRU]),\n",
       " Equity(369 [PSA]),\n",
       " Equity(370 [PSX]),\n",
       " Equity(371 [PVH]),\n",
       " Equity(372 [PWR]),\n",
       " Equity(373 [PX]),\n",
       " Equity(374 [PXD]),\n",
       " Equity(375 [PYPL]),\n",
       " Equity(376 [QCOM]),\n",
       " Equity(377 [QRVO]),\n",
       " Equity(378 [RCL]),\n",
       " Equity(379 [RE]),\n",
       " Equity(380 [REG]),\n",
       " Equity(381 [REGN]),\n",
       " Equity(382 [RF]),\n",
       " Equity(383 [RHI]),\n",
       " Equity(384 [RHT]),\n",
       " Equity(385 [RJF]),\n",
       " Equity(386 [RL]),\n",
       " Equity(387 [RMD]),\n",
       " Equity(388 [ROK]),\n",
       " Equity(389 [ROP]),\n",
       " Equity(390 [ROST]),\n",
       " Equity(391 [RRC]),\n",
       " Equity(392 [RSG]),\n",
       " Equity(393 [RTN]),\n",
       " Equity(394 [SBAC]),\n",
       " Equity(395 [SBUX]),\n",
       " Equity(396 [SCG]),\n",
       " Equity(397 [SCHW]),\n",
       " Equity(398 [SEE]),\n",
       " Equity(399 [SHW]),\n",
       " Equity(400 [SIG]),\n",
       " Equity(401 [SJM]),\n",
       " Equity(402 [SLB]),\n",
       " Equity(403 [SLG]),\n",
       " Equity(404 [SNA]),\n",
       " Equity(405 [SNI]),\n",
       " Equity(406 [SNPS]),\n",
       " Equity(407 [SO]),\n",
       " Equity(408 [SPG]),\n",
       " Equity(409 [SPLS]),\n",
       " Equity(410 [SRCL]),\n",
       " Equity(411 [SRE]),\n",
       " Equity(412 [STI]),\n",
       " Equity(413 [STT]),\n",
       " Equity(414 [STX]),\n",
       " Equity(415 [STZ]),\n",
       " Equity(416 [SWK]),\n",
       " Equity(417 [SWKS]),\n",
       " Equity(418 [SYF]),\n",
       " Equity(419 [SYK]),\n",
       " Equity(420 [SYMC]),\n",
       " Equity(421 [SYY]),\n",
       " Equity(422 [T]),\n",
       " Equity(423 [TAP]),\n",
       " Equity(424 [TDG]),\n",
       " Equity(425 [TEL]),\n",
       " Equity(426 [TGT]),\n",
       " Equity(427 [TIF]),\n",
       " Equity(428 [TJX]),\n",
       " Equity(429 [TMK]),\n",
       " Equity(430 [TMO]),\n",
       " Equity(431 [TRIP]),\n",
       " Equity(432 [TROW]),\n",
       " Equity(433 [TRV]),\n",
       " Equity(434 [TSCO]),\n",
       " Equity(435 [TSN]),\n",
       " Equity(436 [TSS]),\n",
       " Equity(437 [TWX]),\n",
       " Equity(438 [TXN]),\n",
       " Equity(439 [TXT]),\n",
       " Equity(440 [UAA]),\n",
       " Equity(441 [UAL]),\n",
       " Equity(442 [UDR]),\n",
       " Equity(443 [UHS]),\n",
       " Equity(444 [ULTA]),\n",
       " Equity(445 [UNH]),\n",
       " Equity(446 [UNM]),\n",
       " Equity(447 [UNP]),\n",
       " Equity(448 [UPS]),\n",
       " Equity(449 [URI]),\n",
       " Equity(450 [USB]),\n",
       " Equity(451 [UTX]),\n",
       " Equity(452 [V]),\n",
       " Equity(453 [VAR]),\n",
       " Equity(454 [VFC]),\n",
       " Equity(455 [VIAB]),\n",
       " Equity(456 [VLO]),\n",
       " Equity(457 [VMC]),\n",
       " Equity(458 [VNO]),\n",
       " Equity(459 [VRSK]),\n",
       " Equity(460 [VRSN]),\n",
       " Equity(461 [VRTX]),\n",
       " Equity(462 [VTR]),\n",
       " Equity(463 [VZ]),\n",
       " Equity(464 [WAT]),\n",
       " Equity(465 [WBA]),\n",
       " Equity(466 [WDC]),\n",
       " Equity(467 [WEC]),\n",
       " Equity(468 [WFC]),\n",
       " Equity(469 [WHR]),\n",
       " Equity(471 [WM]),\n",
       " Equity(472 [WMB]),\n",
       " Equity(473 [WMT]),\n",
       " Equity(474 [WRK]),\n",
       " Equity(475 [WU]),\n",
       " Equity(476 [WY]),\n",
       " Equity(477 [WYN]),\n",
       " Equity(478 [WYNN]),\n",
       " Equity(479 [XEC]),\n",
       " Equity(480 [XEL]),\n",
       " Equity(481 [XL]),\n",
       " Equity(482 [XLNX]),\n",
       " Equity(483 [XOM]),\n",
       " Equity(484 [XRAY]),\n",
       " Equity(485 [XRX]),\n",
       " Equity(486 [XYL]),\n",
       " Equity(487 [YUM]),\n",
       " Equity(488 [ZBH]),\n",
       " Equity(489 [ZION]),\n",
       " Equity(490 [ZTS])]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "universe_end_date = pd.Timestamp('2016-01-05', tz='UTC')\n",
    "\n",
    "universe_tickers = engine\\\n",
    "    .run_pipeline(\n",
    "        Pipeline(screen=universe),\n",
    "        universe_end_date,\n",
    "        universe_end_date)\\\n",
    "    .index.get_level_values(1)\\\n",
    "    .values.tolist()\n",
    "    \n",
    "universe_tickers"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Get Returns data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "from zipline.data.data_portal import DataPortal\n",
    "\n",
    "data_portal = DataPortal(\n",
    "    bundle_data.asset_finder,\n",
    "    trading_calendar=trading_calendar,\n",
    "    first_trading_day=bundle_data.equity_daily_bar_reader.first_trading_day,\n",
    "    equity_minute_reader=None,\n",
    "    equity_daily_reader=bundle_data.equity_daily_bar_reader,\n",
    "    adjustment_reader=bundle_data.adjustment_reader)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Get pricing data helper function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "from quiz_helper import get_pricing"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## get pricing data into a dataframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Equity(0 [A])</th>\n",
       "      <th>Equity(1 [AAL])</th>\n",
       "      <th>Equity(2 [AAP])</th>\n",
       "      <th>Equity(3 [AAPL])</th>\n",
       "      <th>Equity(4 [ABBV])</th>\n",
       "      <th>Equity(5 [ABC])</th>\n",
       "      <th>Equity(6 [ABT])</th>\n",
       "      <th>Equity(7 [ACN])</th>\n",
       "      <th>Equity(8 [ADBE])</th>\n",
       "      <th>Equity(9 [ADI])</th>\n",
       "      <th>...</th>\n",
       "      <th>Equity(481 [XL])</th>\n",
       "      <th>Equity(482 [XLNX])</th>\n",
       "      <th>Equity(483 [XOM])</th>\n",
       "      <th>Equity(484 [XRAY])</th>\n",
       "      <th>Equity(485 [XRX])</th>\n",
       "      <th>Equity(486 [XYL])</th>\n",
       "      <th>Equity(487 [YUM])</th>\n",
       "      <th>Equity(488 [ZBH])</th>\n",
       "      <th>Equity(489 [ZION])</th>\n",
       "      <th>Equity(490 [ZTS])</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2011-01-07 00:00:00+00:00</th>\n",
       "      <td>0.008437</td>\n",
       "      <td>0.014230</td>\n",
       "      <td>0.026702</td>\n",
       "      <td>0.007146</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.001994</td>\n",
       "      <td>0.004165</td>\n",
       "      <td>0.001648</td>\n",
       "      <td>-0.007127</td>\n",
       "      <td>-0.005818</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.001838</td>\n",
       "      <td>-0.005619</td>\n",
       "      <td>0.005461</td>\n",
       "      <td>-0.004044</td>\n",
       "      <td>-0.013953</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.012457</td>\n",
       "      <td>-0.000181</td>\n",
       "      <td>-0.010458</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-01-10 00:00:00+00:00</th>\n",
       "      <td>-0.004174</td>\n",
       "      <td>0.006195</td>\n",
       "      <td>0.007435</td>\n",
       "      <td>0.018852</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.005714</td>\n",
       "      <td>-0.008896</td>\n",
       "      <td>-0.008854</td>\n",
       "      <td>0.028714</td>\n",
       "      <td>0.002926</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000947</td>\n",
       "      <td>0.007814</td>\n",
       "      <td>-0.006081</td>\n",
       "      <td>0.010466</td>\n",
       "      <td>0.009733</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.001440</td>\n",
       "      <td>0.007784</td>\n",
       "      <td>-0.017945</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-01-11 00:00:00+00:00</th>\n",
       "      <td>-0.001886</td>\n",
       "      <td>-0.043644</td>\n",
       "      <td>-0.005927</td>\n",
       "      <td>-0.002367</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.009783</td>\n",
       "      <td>-0.002067</td>\n",
       "      <td>0.013717</td>\n",
       "      <td>0.000607</td>\n",
       "      <td>0.008753</td>\n",
       "      <td>...</td>\n",
       "      <td>0.001314</td>\n",
       "      <td>0.010179</td>\n",
       "      <td>0.007442</td>\n",
       "      <td>0.007351</td>\n",
       "      <td>0.006116</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.006470</td>\n",
       "      <td>0.035676</td>\n",
       "      <td>0.007467</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-01-12 00:00:00+00:00</th>\n",
       "      <td>0.017254</td>\n",
       "      <td>-0.008237</td>\n",
       "      <td>0.013387</td>\n",
       "      <td>0.008133</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.005979</td>\n",
       "      <td>-0.001011</td>\n",
       "      <td>0.022969</td>\n",
       "      <td>0.017950</td>\n",
       "      <td>0.000257</td>\n",
       "      <td>...</td>\n",
       "      <td>0.004986</td>\n",
       "      <td>0.015666</td>\n",
       "      <td>0.011763</td>\n",
       "      <td>0.027182</td>\n",
       "      <td>0.004386</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002631</td>\n",
       "      <td>0.014741</td>\n",
       "      <td>-0.011903</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-01-13 00:00:00+00:00</th>\n",
       "      <td>-0.004559</td>\n",
       "      <td>0.000955</td>\n",
       "      <td>0.003031</td>\n",
       "      <td>0.003657</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.014925</td>\n",
       "      <td>-0.004451</td>\n",
       "      <td>-0.000400</td>\n",
       "      <td>-0.005719</td>\n",
       "      <td>-0.005012</td>\n",
       "      <td>...</td>\n",
       "      <td>0.030499</td>\n",
       "      <td>-0.003217</td>\n",
       "      <td>0.001694</td>\n",
       "      <td>0.000547</td>\n",
       "      <td>-0.018235</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.005084</td>\n",
       "      <td>-0.004665</td>\n",
       "      <td>-0.009178</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-01-14 00:00:00+00:00</th>\n",
       "      <td>0.003439</td>\n",
       "      <td>-0.009156</td>\n",
       "      <td>0.003022</td>\n",
       "      <td>0.008106</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.001395</td>\n",
       "      <td>-0.010111</td>\n",
       "      <td>0.002590</td>\n",
       "      <td>0.012283</td>\n",
       "      <td>0.019827</td>\n",
       "      <td>...</td>\n",
       "      <td>0.026607</td>\n",
       "      <td>0.025894</td>\n",
       "      <td>0.014743</td>\n",
       "      <td>-0.000287</td>\n",
       "      <td>0.026494</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.021661</td>\n",
       "      <td>0.005949</td>\n",
       "      <td>0.033177</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-01-18 00:00:00+00:00</th>\n",
       "      <td>0.034254</td>\n",
       "      <td>-0.062085</td>\n",
       "      <td>-0.004286</td>\n",
       "      <td>-0.022474</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.020889</td>\n",
       "      <td>0.006621</td>\n",
       "      <td>0.006998</td>\n",
       "      <td>0.011542</td>\n",
       "      <td>0.032645</td>\n",
       "      <td>...</td>\n",
       "      <td>0.001678</td>\n",
       "      <td>0.002501</td>\n",
       "      <td>0.011163</td>\n",
       "      <td>0.011589</td>\n",
       "      <td>0.006044</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.029453</td>\n",
       "      <td>0.006998</td>\n",
       "      <td>-0.008534</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-01-19 00:00:00+00:00</th>\n",
       "      <td>-0.010224</td>\n",
       "      <td>-0.008929</td>\n",
       "      <td>0.008754</td>\n",
       "      <td>-0.005314</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.017144</td>\n",
       "      <td>0.002753</td>\n",
       "      <td>-0.002962</td>\n",
       "      <td>-0.007899</td>\n",
       "      <td>-0.020575</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.014834</td>\n",
       "      <td>-0.023590</td>\n",
       "      <td>-0.005968</td>\n",
       "      <td>-0.019899</td>\n",
       "      <td>-0.012847</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000818</td>\n",
       "      <td>-0.004098</td>\n",
       "      <td>-0.018433</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-01-20 00:00:00+00:00</th>\n",
       "      <td>-0.008496</td>\n",
       "      <td>0.021953</td>\n",
       "      <td>-0.004732</td>\n",
       "      <td>-0.018189</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.004794</td>\n",
       "      <td>0.013322</td>\n",
       "      <td>0.018713</td>\n",
       "      <td>-0.012386</td>\n",
       "      <td>-0.002818</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.024512</td>\n",
       "      <td>0.007744</td>\n",
       "      <td>-0.006261</td>\n",
       "      <td>-0.000841</td>\n",
       "      <td>-0.033798</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.013182</td>\n",
       "      <td>-0.001612</td>\n",
       "      <td>-0.007972</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-01-21 00:00:00+00:00</th>\n",
       "      <td>0.007873</td>\n",
       "      <td>-0.041038</td>\n",
       "      <td>0.005544</td>\n",
       "      <td>-0.017911</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.010642</td>\n",
       "      <td>-0.000853</td>\n",
       "      <td>-0.001952</td>\n",
       "      <td>-0.006569</td>\n",
       "      <td>-0.004113</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000615</td>\n",
       "      <td>0.015825</td>\n",
       "      <td>-0.003048</td>\n",
       "      <td>-0.000872</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.007590</td>\n",
       "      <td>0.009325</td>\n",
       "      <td>0.024020</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-01-24 00:00:00+00:00</th>\n",
       "      <td>0.014646</td>\n",
       "      <td>0.027473</td>\n",
       "      <td>-0.001106</td>\n",
       "      <td>0.032837</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.005249</td>\n",
       "      <td>0.005223</td>\n",
       "      <td>0.008420</td>\n",
       "      <td>0.022843</td>\n",
       "      <td>0.014974</td>\n",
       "      <td>...</td>\n",
       "      <td>0.012359</td>\n",
       "      <td>0.016011</td>\n",
       "      <td>-0.004943</td>\n",
       "      <td>0.001660</td>\n",
       "      <td>0.008049</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000601</td>\n",
       "      <td>-0.016501</td>\n",
       "      <td>-0.023021</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-01-25 00:00:00+00:00</th>\n",
       "      <td>-0.006736</td>\n",
       "      <td>0.002982</td>\n",
       "      <td>0.009146</td>\n",
       "      <td>0.011710</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.009363</td>\n",
       "      <td>-0.004347</td>\n",
       "      <td>0.004859</td>\n",
       "      <td>-0.013811</td>\n",
       "      <td>-0.014505</td>\n",
       "      <td>...</td>\n",
       "      <td>0.002178</td>\n",
       "      <td>0.006273</td>\n",
       "      <td>0.001154</td>\n",
       "      <td>0.001134</td>\n",
       "      <td>0.015143</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.006208</td>\n",
       "      <td>0.017142</td>\n",
       "      <td>-0.008836</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-01-26 00:00:00+00:00</th>\n",
       "      <td>-0.030736</td>\n",
       "      <td>0.066133</td>\n",
       "      <td>0.003593</td>\n",
       "      <td>0.007193</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.012227</td>\n",
       "      <td>-0.025241</td>\n",
       "      <td>0.012192</td>\n",
       "      <td>-0.001192</td>\n",
       "      <td>0.002837</td>\n",
       "      <td>...</td>\n",
       "      <td>0.002628</td>\n",
       "      <td>0.005934</td>\n",
       "      <td>0.012453</td>\n",
       "      <td>0.000552</td>\n",
       "      <td>-0.076291</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.004803</td>\n",
       "      <td>-0.019524</td>\n",
       "      <td>-0.010626</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-01-27 00:00:00+00:00</th>\n",
       "      <td>0.007721</td>\n",
       "      <td>0.023178</td>\n",
       "      <td>-0.001553</td>\n",
       "      <td>-0.001877</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.011833</td>\n",
       "      <td>-0.007928</td>\n",
       "      <td>0.000179</td>\n",
       "      <td>0.009845</td>\n",
       "      <td>0.007480</td>\n",
       "      <td>...</td>\n",
       "      <td>0.014267</td>\n",
       "      <td>0.021169</td>\n",
       "      <td>0.002751</td>\n",
       "      <td>0.016396</td>\n",
       "      <td>0.024664</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.003746</td>\n",
       "      <td>0.068754</td>\n",
       "      <td>0.020160</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-01-28 00:00:00+00:00</th>\n",
       "      <td>-0.018846</td>\n",
       "      <td>-0.080553</td>\n",
       "      <td>-0.000936</td>\n",
       "      <td>-0.020710</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.022262</td>\n",
       "      <td>-0.019200</td>\n",
       "      <td>-0.016035</td>\n",
       "      <td>-0.040177</td>\n",
       "      <td>-0.022460</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.025647</td>\n",
       "      <td>-0.020108</td>\n",
       "      <td>-0.011131</td>\n",
       "      <td>-0.021871</td>\n",
       "      <td>-0.022229</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.025001</td>\n",
       "      <td>-0.008472</td>\n",
       "      <td>-0.013873</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-01-31 00:00:00+00:00</th>\n",
       "      <td>0.003608</td>\n",
       "      <td>-0.023615</td>\n",
       "      <td>-0.002351</td>\n",
       "      <td>0.009578</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.003893</td>\n",
       "      <td>-0.007248</td>\n",
       "      <td>-0.000980</td>\n",
       "      <td>0.017236</td>\n",
       "      <td>0.013818</td>\n",
       "      <td>...</td>\n",
       "      <td>0.004846</td>\n",
       "      <td>0.000298</td>\n",
       "      <td>0.021396</td>\n",
       "      <td>-0.007560</td>\n",
       "      <td>0.006615</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.007748</td>\n",
       "      <td>0.009902</td>\n",
       "      <td>0.006378</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-02-01 00:00:00+00:00</th>\n",
       "      <td>0.011654</td>\n",
       "      <td>-0.001047</td>\n",
       "      <td>-0.009218</td>\n",
       "      <td>0.016818</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.011976</td>\n",
       "      <td>0.001546</td>\n",
       "      <td>0.017498</td>\n",
       "      <td>0.013918</td>\n",
       "      <td>0.021624</td>\n",
       "      <td>...</td>\n",
       "      <td>0.015687</td>\n",
       "      <td>0.032003</td>\n",
       "      <td>0.040037</td>\n",
       "      <td>0.024795</td>\n",
       "      <td>0.024498</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.014102</td>\n",
       "      <td>0.017746</td>\n",
       "      <td>0.030970</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-02-02 00:00:00+00:00</th>\n",
       "      <td>0.010112</td>\n",
       "      <td>-0.039304</td>\n",
       "      <td>-0.027477</td>\n",
       "      <td>-0.002053</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.021197</td>\n",
       "      <td>0.011068</td>\n",
       "      <td>0.003632</td>\n",
       "      <td>-0.002387</td>\n",
       "      <td>0.002280</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.012846</td>\n",
       "      <td>-0.004518</td>\n",
       "      <td>-0.005958</td>\n",
       "      <td>-0.010390</td>\n",
       "      <td>-0.001827</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.006562</td>\n",
       "      <td>0.005161</td>\n",
       "      <td>-0.003706</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-02-03 00:00:00+00:00</th>\n",
       "      <td>-0.000289</td>\n",
       "      <td>0.007310</td>\n",
       "      <td>0.014126</td>\n",
       "      <td>-0.002560</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.003662</td>\n",
       "      <td>0.005894</td>\n",
       "      <td>0.004178</td>\n",
       "      <td>0.002991</td>\n",
       "      <td>-0.013341</td>\n",
       "      <td>...</td>\n",
       "      <td>0.010430</td>\n",
       "      <td>-0.008169</td>\n",
       "      <td>0.000347</td>\n",
       "      <td>0.008556</td>\n",
       "      <td>0.004596</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.031413</td>\n",
       "      <td>-0.000333</td>\n",
       "      <td>-0.000394</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-02-04 00:00:00+00:00</th>\n",
       "      <td>0.005627</td>\n",
       "      <td>-0.036500</td>\n",
       "      <td>0.024014</td>\n",
       "      <td>0.008915</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.033047</td>\n",
       "      <td>0.002616</td>\n",
       "      <td>-0.004360</td>\n",
       "      <td>-0.005070</td>\n",
       "      <td>0.019659</td>\n",
       "      <td>...</td>\n",
       "      <td>0.009471</td>\n",
       "      <td>0.024709</td>\n",
       "      <td>-0.001917</td>\n",
       "      <td>0.003048</td>\n",
       "      <td>-0.005506</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.001408</td>\n",
       "      <td>0.002471</td>\n",
       "      <td>0.016111</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-02-07 00:00:00+00:00</th>\n",
       "      <td>0.007709</td>\n",
       "      <td>0.052046</td>\n",
       "      <td>0.008114</td>\n",
       "      <td>0.015538</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.002178</td>\n",
       "      <td>-0.009341</td>\n",
       "      <td>0.002279</td>\n",
       "      <td>0.005995</td>\n",
       "      <td>-0.003514</td>\n",
       "      <td>...</td>\n",
       "      <td>0.006801</td>\n",
       "      <td>-0.005073</td>\n",
       "      <td>0.007803</td>\n",
       "      <td>0.006852</td>\n",
       "      <td>0.002768</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002028</td>\n",
       "      <td>-0.010876</td>\n",
       "      <td>0.027617</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-02-08 00:00:00+00:00</th>\n",
       "      <td>0.010854</td>\n",
       "      <td>0.016455</td>\n",
       "      <td>0.006202</td>\n",
       "      <td>0.009440</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002182</td>\n",
       "      <td>-0.001738</td>\n",
       "      <td>-0.000557</td>\n",
       "      <td>0.000298</td>\n",
       "      <td>-0.006010</td>\n",
       "      <td>...</td>\n",
       "      <td>0.003846</td>\n",
       "      <td>0.001795</td>\n",
       "      <td>-0.006077</td>\n",
       "      <td>0.005182</td>\n",
       "      <td>-0.002761</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.003851</td>\n",
       "      <td>-0.000495</td>\n",
       "      <td>0.004780</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-02-09 00:00:00+00:00</th>\n",
       "      <td>0.004664</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.016955</td>\n",
       "      <td>0.008332</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.003006</td>\n",
       "      <td>-0.001530</td>\n",
       "      <td>0.001138</td>\n",
       "      <td>-0.016682</td>\n",
       "      <td>0.004781</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.011837</td>\n",
       "      <td>-0.001792</td>\n",
       "      <td>-0.005178</td>\n",
       "      <td>-0.018441</td>\n",
       "      <td>0.003705</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.001821</td>\n",
       "      <td>-0.009851</td>\n",
       "      <td>-0.004757</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-02-10 00:00:00+00:00</th>\n",
       "      <td>0.000413</td>\n",
       "      <td>-0.003048</td>\n",
       "      <td>-0.011367</td>\n",
       "      <td>-0.010109</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.001101</td>\n",
       "      <td>-0.001110</td>\n",
       "      <td>0.005503</td>\n",
       "      <td>0.016965</td>\n",
       "      <td>0.004513</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.008947</td>\n",
       "      <td>0.003914</td>\n",
       "      <td>0.007876</td>\n",
       "      <td>0.005512</td>\n",
       "      <td>-0.004624</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.004853</td>\n",
       "      <td>0.011449</td>\n",
       "      <td>-0.026498</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-02-11 00:00:00+00:00</th>\n",
       "      <td>-0.007150</td>\n",
       "      <td>0.028364</td>\n",
       "      <td>0.000764</td>\n",
       "      <td>0.006505</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.001375</td>\n",
       "      <td>0.001534</td>\n",
       "      <td>-0.011146</td>\n",
       "      <td>0.002979</td>\n",
       "      <td>0.015007</td>\n",
       "      <td>...</td>\n",
       "      <td>0.001705</td>\n",
       "      <td>0.010765</td>\n",
       "      <td>-0.004562</td>\n",
       "      <td>0.007147</td>\n",
       "      <td>0.012021</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000616</td>\n",
       "      <td>0.009660</td>\n",
       "      <td>0.014256</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-02-14 00:00:00+00:00</th>\n",
       "      <td>0.001663</td>\n",
       "      <td>-0.015790</td>\n",
       "      <td>-0.023274</td>\n",
       "      <td>0.006529</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.005750</td>\n",
       "      <td>0.009245</td>\n",
       "      <td>0.000202</td>\n",
       "      <td>0.005643</td>\n",
       "      <td>0.009877</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.011616</td>\n",
       "      <td>0.000318</td>\n",
       "      <td>0.025230</td>\n",
       "      <td>-0.005443</td>\n",
       "      <td>0.005476</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.010657</td>\n",
       "      <td>0.002484</td>\n",
       "      <td>-0.010021</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-02-15 00:00:00+00:00</th>\n",
       "      <td>-0.011905</td>\n",
       "      <td>0.011043</td>\n",
       "      <td>-0.003926</td>\n",
       "      <td>0.002016</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.007329</td>\n",
       "      <td>0.016750</td>\n",
       "      <td>-0.008021</td>\n",
       "      <td>0.002363</td>\n",
       "      <td>0.000239</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.006079</td>\n",
       "      <td>-0.001804</td>\n",
       "      <td>-0.022853</td>\n",
       "      <td>0.004097</td>\n",
       "      <td>0.003604</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.008526</td>\n",
       "      <td>-0.001815</td>\n",
       "      <td>-0.004461</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-02-16 00:00:00+00:00</th>\n",
       "      <td>0.015123</td>\n",
       "      <td>0.001958</td>\n",
       "      <td>0.013860</td>\n",
       "      <td>0.008967</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.003554</td>\n",
       "      <td>-0.010502</td>\n",
       "      <td>0.027329</td>\n",
       "      <td>0.022098</td>\n",
       "      <td>-0.003905</td>\n",
       "      <td>...</td>\n",
       "      <td>0.009174</td>\n",
       "      <td>0.003863</td>\n",
       "      <td>0.008682</td>\n",
       "      <td>0.000285</td>\n",
       "      <td>0.027093</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.008898</td>\n",
       "      <td>0.010557</td>\n",
       "      <td>0.001206</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-02-17 00:00:00+00:00</th>\n",
       "      <td>-0.003311</td>\n",
       "      <td>-0.017791</td>\n",
       "      <td>-0.024844</td>\n",
       "      <td>-0.013309</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.029148</td>\n",
       "      <td>0.001301</td>\n",
       "      <td>0.011784</td>\n",
       "      <td>0.008360</td>\n",
       "      <td>0.008559</td>\n",
       "      <td>...</td>\n",
       "      <td>0.015656</td>\n",
       "      <td>0.000318</td>\n",
       "      <td>0.002275</td>\n",
       "      <td>-0.001911</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.003906</td>\n",
       "      <td>0.015325</td>\n",
       "      <td>-0.003227</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011-02-18 00:00:00+00:00</th>\n",
       "      <td>0.011078</td>\n",
       "      <td>-0.020103</td>\n",
       "      <td>-0.006693</td>\n",
       "      <td>-0.021595</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.009620</td>\n",
       "      <td>0.012106</td>\n",
       "      <td>-0.007953</td>\n",
       "      <td>0.011721</td>\n",
       "      <td>-0.001691</td>\n",
       "      <td>...</td>\n",
       "      <td>0.053404</td>\n",
       "      <td>0.001447</td>\n",
       "      <td>0.007393</td>\n",
       "      <td>0.013148</td>\n",
       "      <td>-0.004390</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.004110</td>\n",
       "      <td>0.023782</td>\n",
       "      <td>-0.017960</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-11-20 00:00:00+00:00</th>\n",
       "      <td>0.001072</td>\n",
       "      <td>-0.002373</td>\n",
       "      <td>0.002767</td>\n",
       "      <td>0.004381</td>\n",
       "      <td>0.009256</td>\n",
       "      <td>-0.000905</td>\n",
       "      <td>0.006113</td>\n",
       "      <td>0.006430</td>\n",
       "      <td>0.000545</td>\n",
       "      <td>-0.005843</td>\n",
       "      <td>...</td>\n",
       "      <td>0.008131</td>\n",
       "      <td>0.000412</td>\n",
       "      <td>-0.006352</td>\n",
       "      <td>0.002793</td>\n",
       "      <td>0.002899</td>\n",
       "      <td>-0.004498</td>\n",
       "      <td>0.015060</td>\n",
       "      <td>-0.003176</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.008950</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-11-23 00:00:00+00:00</th>\n",
       "      <td>-0.007094</td>\n",
       "      <td>0.002379</td>\n",
       "      <td>-0.001228</td>\n",
       "      <td>-0.012989</td>\n",
       "      <td>0.000646</td>\n",
       "      <td>-0.003728</td>\n",
       "      <td>-0.012381</td>\n",
       "      <td>-0.001206</td>\n",
       "      <td>0.001634</td>\n",
       "      <td>-0.044107</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.004696</td>\n",
       "      <td>-0.006955</td>\n",
       "      <td>0.006131</td>\n",
       "      <td>0.007345</td>\n",
       "      <td>0.027692</td>\n",
       "      <td>0.001322</td>\n",
       "      <td>-0.000966</td>\n",
       "      <td>-0.008581</td>\n",
       "      <td>-0.001992</td>\n",
       "      <td>-0.007600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-11-24 00:00:00+00:00</th>\n",
       "      <td>0.002085</td>\n",
       "      <td>-0.025309</td>\n",
       "      <td>0.003504</td>\n",
       "      <td>0.009594</td>\n",
       "      <td>-0.000323</td>\n",
       "      <td>-0.002336</td>\n",
       "      <td>0.000210</td>\n",
       "      <td>-0.004537</td>\n",
       "      <td>0.000435</td>\n",
       "      <td>0.063741</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.000777</td>\n",
       "      <td>0.012960</td>\n",
       "      <td>0.019935</td>\n",
       "      <td>-0.009563</td>\n",
       "      <td>-0.012992</td>\n",
       "      <td>-0.001871</td>\n",
       "      <td>-0.004252</td>\n",
       "      <td>-0.009043</td>\n",
       "      <td>0.002650</td>\n",
       "      <td>-0.000651</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-11-25 00:00:00+00:00</th>\n",
       "      <td>-0.008206</td>\n",
       "      <td>0.001938</td>\n",
       "      <td>0.006805</td>\n",
       "      <td>-0.007151</td>\n",
       "      <td>-0.013744</td>\n",
       "      <td>0.004365</td>\n",
       "      <td>-0.000862</td>\n",
       "      <td>-0.002338</td>\n",
       "      <td>-0.002500</td>\n",
       "      <td>-0.002810</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.008888</td>\n",
       "      <td>-0.004458</td>\n",
       "      <td>-0.007690</td>\n",
       "      <td>-0.002792</td>\n",
       "      <td>-0.001913</td>\n",
       "      <td>0.004824</td>\n",
       "      <td>0.002894</td>\n",
       "      <td>-0.006174</td>\n",
       "      <td>-0.000309</td>\n",
       "      <td>0.000868</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-11-27 00:00:00+00:00</th>\n",
       "      <td>-0.003256</td>\n",
       "      <td>0.009201</td>\n",
       "      <td>0.003285</td>\n",
       "      <td>-0.001863</td>\n",
       "      <td>-0.004803</td>\n",
       "      <td>0.000612</td>\n",
       "      <td>0.000210</td>\n",
       "      <td>0.003363</td>\n",
       "      <td>0.004359</td>\n",
       "      <td>0.003315</td>\n",
       "      <td>...</td>\n",
       "      <td>0.004736</td>\n",
       "      <td>0.004478</td>\n",
       "      <td>-0.000257</td>\n",
       "      <td>0.002633</td>\n",
       "      <td>0.003795</td>\n",
       "      <td>-0.002140</td>\n",
       "      <td>0.005105</td>\n",
       "      <td>-0.002869</td>\n",
       "      <td>0.005013</td>\n",
       "      <td>0.002343</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-11-30 00:00:00+00:00</th>\n",
       "      <td>-0.010209</td>\n",
       "      <td>-0.010321</td>\n",
       "      <td>-0.012798</td>\n",
       "      <td>0.004159</td>\n",
       "      <td>-0.030838</td>\n",
       "      <td>-0.003542</td>\n",
       "      <td>-0.011004</td>\n",
       "      <td>-0.002228</td>\n",
       "      <td>-0.007703</td>\n",
       "      <td>0.019522</td>\n",
       "      <td>...</td>\n",
       "      <td>0.004212</td>\n",
       "      <td>0.009348</td>\n",
       "      <td>0.005294</td>\n",
       "      <td>-0.007363</td>\n",
       "      <td>-0.007524</td>\n",
       "      <td>-0.006928</td>\n",
       "      <td>-0.006183</td>\n",
       "      <td>0.000101</td>\n",
       "      <td>-0.004339</td>\n",
       "      <td>-0.008071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-01 00:00:00+00:00</th>\n",
       "      <td>0.015748</td>\n",
       "      <td>0.048493</td>\n",
       "      <td>-0.002396</td>\n",
       "      <td>-0.008116</td>\n",
       "      <td>0.014957</td>\n",
       "      <td>0.008718</td>\n",
       "      <td>0.012022</td>\n",
       "      <td>0.008480</td>\n",
       "      <td>0.011918</td>\n",
       "      <td>-0.000970</td>\n",
       "      <td>...</td>\n",
       "      <td>0.015192</td>\n",
       "      <td>0.011075</td>\n",
       "      <td>0.002821</td>\n",
       "      <td>0.021600</td>\n",
       "      <td>0.013276</td>\n",
       "      <td>0.008582</td>\n",
       "      <td>0.027170</td>\n",
       "      <td>0.016927</td>\n",
       "      <td>0.015028</td>\n",
       "      <td>0.006632</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-02 00:00:00+00:00</th>\n",
       "      <td>-0.005284</td>\n",
       "      <td>0.012930</td>\n",
       "      <td>-0.027166</td>\n",
       "      <td>-0.009030</td>\n",
       "      <td>-0.022022</td>\n",
       "      <td>-0.006534</td>\n",
       "      <td>-0.005287</td>\n",
       "      <td>-0.004991</td>\n",
       "      <td>-0.005727</td>\n",
       "      <td>-0.006990</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.003858</td>\n",
       "      <td>-0.024693</td>\n",
       "      <td>-0.028571</td>\n",
       "      <td>0.007572</td>\n",
       "      <td>-0.029962</td>\n",
       "      <td>-0.018335</td>\n",
       "      <td>0.006313</td>\n",
       "      <td>-0.004473</td>\n",
       "      <td>-0.015448</td>\n",
       "      <td>-0.013610</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-03 00:00:00+00:00</th>\n",
       "      <td>-0.009521</td>\n",
       "      <td>-0.012555</td>\n",
       "      <td>-0.019944</td>\n",
       "      <td>-0.009292</td>\n",
       "      <td>-0.027724</td>\n",
       "      <td>-0.001415</td>\n",
       "      <td>-0.023650</td>\n",
       "      <td>-0.015429</td>\n",
       "      <td>-0.022930</td>\n",
       "      <td>-0.027826</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.008294</td>\n",
       "      <td>-0.010820</td>\n",
       "      <td>-0.014327</td>\n",
       "      <td>0.002733</td>\n",
       "      <td>-0.000959</td>\n",
       "      <td>-0.005676</td>\n",
       "      <td>-0.024272</td>\n",
       "      <td>-0.028367</td>\n",
       "      <td>-0.015725</td>\n",
       "      <td>-0.025244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-04 00:00:00+00:00</th>\n",
       "      <td>0.020199</td>\n",
       "      <td>0.039303</td>\n",
       "      <td>0.006779</td>\n",
       "      <td>0.033246</td>\n",
       "      <td>0.018899</td>\n",
       "      <td>0.011957</td>\n",
       "      <td>0.026046</td>\n",
       "      <td>0.029924</td>\n",
       "      <td>0.029696</td>\n",
       "      <td>0.002713</td>\n",
       "      <td>...</td>\n",
       "      <td>0.022211</td>\n",
       "      <td>0.010326</td>\n",
       "      <td>0.005736</td>\n",
       "      <td>0.007495</td>\n",
       "      <td>0.011599</td>\n",
       "      <td>0.024774</td>\n",
       "      <td>0.041159</td>\n",
       "      <td>0.011977</td>\n",
       "      <td>0.024452</td>\n",
       "      <td>0.027882</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-07 00:00:00+00:00</th>\n",
       "      <td>-0.000340</td>\n",
       "      <td>0.018020</td>\n",
       "      <td>-0.029578</td>\n",
       "      <td>-0.006298</td>\n",
       "      <td>-0.015921</td>\n",
       "      <td>0.000898</td>\n",
       "      <td>0.005727</td>\n",
       "      <td>-0.001463</td>\n",
       "      <td>-0.032188</td>\n",
       "      <td>-0.011988</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.008791</td>\n",
       "      <td>-0.026122</td>\n",
       "      <td>-0.001900</td>\n",
       "      <td>-0.029576</td>\n",
       "      <td>-0.019647</td>\n",
       "      <td>0.003540</td>\n",
       "      <td>-0.001384</td>\n",
       "      <td>-0.042085</td>\n",
       "      <td>-0.011841</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-08 00:00:00+00:00</th>\n",
       "      <td>-0.023307</td>\n",
       "      <td>-0.026876</td>\n",
       "      <td>-0.008866</td>\n",
       "      <td>-0.000425</td>\n",
       "      <td>0.007114</td>\n",
       "      <td>0.004906</td>\n",
       "      <td>-0.000209</td>\n",
       "      <td>-0.000280</td>\n",
       "      <td>0.023661</td>\n",
       "      <td>-0.008216</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.004606</td>\n",
       "      <td>-0.003910</td>\n",
       "      <td>-0.028251</td>\n",
       "      <td>-0.012067</td>\n",
       "      <td>-0.004930</td>\n",
       "      <td>-0.017074</td>\n",
       "      <td>-0.010735</td>\n",
       "      <td>-0.006277</td>\n",
       "      <td>-0.031813</td>\n",
       "      <td>0.000666</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-09 00:00:00+00:00</th>\n",
       "      <td>-0.005170</td>\n",
       "      <td>-0.020213</td>\n",
       "      <td>0.022223</td>\n",
       "      <td>-0.022077</td>\n",
       "      <td>-0.011303</td>\n",
       "      <td>0.001984</td>\n",
       "      <td>-0.012948</td>\n",
       "      <td>-0.014876</td>\n",
       "      <td>-0.023550</td>\n",
       "      <td>-0.023608</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.013092</td>\n",
       "      <td>-0.009934</td>\n",
       "      <td>0.013390</td>\n",
       "      <td>-0.021066</td>\n",
       "      <td>-0.009869</td>\n",
       "      <td>-0.000570</td>\n",
       "      <td>-0.023679</td>\n",
       "      <td>0.002205</td>\n",
       "      <td>-0.007490</td>\n",
       "      <td>-0.015900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-10 00:00:00+00:00</th>\n",
       "      <td>0.015039</td>\n",
       "      <td>0.010092</td>\n",
       "      <td>-0.009466</td>\n",
       "      <td>0.004763</td>\n",
       "      <td>-0.004463</td>\n",
       "      <td>0.012720</td>\n",
       "      <td>0.007772</td>\n",
       "      <td>0.002897</td>\n",
       "      <td>-0.006699</td>\n",
       "      <td>0.008821</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.006757</td>\n",
       "      <td>0.001883</td>\n",
       "      <td>0.000798</td>\n",
       "      <td>-0.000317</td>\n",
       "      <td>0.014970</td>\n",
       "      <td>0.012138</td>\n",
       "      <td>-0.008256</td>\n",
       "      <td>-0.000297</td>\n",
       "      <td>0.014759</td>\n",
       "      <td>0.019695</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-11 00:00:00+00:00</th>\n",
       "      <td>-0.012227</td>\n",
       "      <td>-0.045356</td>\n",
       "      <td>-0.019179</td>\n",
       "      <td>-0.025740</td>\n",
       "      <td>-0.031185</td>\n",
       "      <td>0.001280</td>\n",
       "      <td>-0.020962</td>\n",
       "      <td>-0.021380</td>\n",
       "      <td>0.027653</td>\n",
       "      <td>-0.003843</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.014938</td>\n",
       "      <td>-0.012713</td>\n",
       "      <td>-0.017840</td>\n",
       "      <td>-0.017755</td>\n",
       "      <td>-0.012793</td>\n",
       "      <td>-0.013062</td>\n",
       "      <td>-0.025836</td>\n",
       "      <td>-0.010112</td>\n",
       "      <td>-0.029782</td>\n",
       "      <td>-0.005856</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-14 00:00:00+00:00</th>\n",
       "      <td>-0.011197</td>\n",
       "      <td>-0.007618</td>\n",
       "      <td>-0.008325</td>\n",
       "      <td>-0.006189</td>\n",
       "      <td>0.025898</td>\n",
       "      <td>0.004406</td>\n",
       "      <td>0.010145</td>\n",
       "      <td>0.010071</td>\n",
       "      <td>0.020127</td>\n",
       "      <td>-0.001938</td>\n",
       "      <td>...</td>\n",
       "      <td>0.007216</td>\n",
       "      <td>-0.000941</td>\n",
       "      <td>0.022738</td>\n",
       "      <td>-0.001835</td>\n",
       "      <td>-0.017913</td>\n",
       "      <td>0.011580</td>\n",
       "      <td>0.004910</td>\n",
       "      <td>0.005356</td>\n",
       "      <td>-0.014991</td>\n",
       "      <td>0.016583</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-15 00:00:00+00:00</th>\n",
       "      <td>0.024683</td>\n",
       "      <td>0.019768</td>\n",
       "      <td>0.057990</td>\n",
       "      <td>-0.017686</td>\n",
       "      <td>0.017133</td>\n",
       "      <td>-0.008194</td>\n",
       "      <td>0.017415</td>\n",
       "      <td>0.003386</td>\n",
       "      <td>0.008149</td>\n",
       "      <td>-0.004743</td>\n",
       "      <td>...</td>\n",
       "      <td>0.015392</td>\n",
       "      <td>0.013516</td>\n",
       "      <td>0.044710</td>\n",
       "      <td>0.004357</td>\n",
       "      <td>0.016222</td>\n",
       "      <td>0.001635</td>\n",
       "      <td>0.013410</td>\n",
       "      <td>0.015787</td>\n",
       "      <td>0.035626</td>\n",
       "      <td>0.008156</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-16 00:00:00+00:00</th>\n",
       "      <td>0.010780</td>\n",
       "      <td>0.014190</td>\n",
       "      <td>0.029771</td>\n",
       "      <td>0.007685</td>\n",
       "      <td>0.021998</td>\n",
       "      <td>-0.000985</td>\n",
       "      <td>0.010080</td>\n",
       "      <td>0.022107</td>\n",
       "      <td>0.016379</td>\n",
       "      <td>0.017336</td>\n",
       "      <td>...</td>\n",
       "      <td>0.004713</td>\n",
       "      <td>0.000531</td>\n",
       "      <td>-0.003522</td>\n",
       "      <td>0.008507</td>\n",
       "      <td>0.024937</td>\n",
       "      <td>0.020719</td>\n",
       "      <td>0.012809</td>\n",
       "      <td>0.008606</td>\n",
       "      <td>0.010755</td>\n",
       "      <td>0.002538</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-17 00:00:00+00:00</th>\n",
       "      <td>-0.017212</td>\n",
       "      <td>-0.017122</td>\n",
       "      <td>-0.048190</td>\n",
       "      <td>-0.021196</td>\n",
       "      <td>-0.021696</td>\n",
       "      <td>0.007386</td>\n",
       "      <td>-0.017153</td>\n",
       "      <td>-0.053355</td>\n",
       "      <td>-0.014232</td>\n",
       "      <td>-0.024510</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.001564</td>\n",
       "      <td>-0.018147</td>\n",
       "      <td>-0.015037</td>\n",
       "      <td>-0.003142</td>\n",
       "      <td>-0.007787</td>\n",
       "      <td>-0.026697</td>\n",
       "      <td>-0.018224</td>\n",
       "      <td>-0.011966</td>\n",
       "      <td>-0.015960</td>\n",
       "      <td>-0.007637</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-18 00:00:00+00:00</th>\n",
       "      <td>-0.041084</td>\n",
       "      <td>-0.032259</td>\n",
       "      <td>-0.022863</td>\n",
       "      <td>-0.027064</td>\n",
       "      <td>-0.011342</td>\n",
       "      <td>-0.004497</td>\n",
       "      <td>-0.034461</td>\n",
       "      <td>-0.012883</td>\n",
       "      <td>-0.030679</td>\n",
       "      <td>-0.016940</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.019013</td>\n",
       "      <td>-0.012314</td>\n",
       "      <td>-0.008724</td>\n",
       "      <td>-0.010451</td>\n",
       "      <td>-0.003944</td>\n",
       "      <td>-0.017002</td>\n",
       "      <td>-0.004991</td>\n",
       "      <td>-0.017384</td>\n",
       "      <td>-0.037845</td>\n",
       "      <td>-0.002791</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-21 00:00:00+00:00</th>\n",
       "      <td>0.009455</td>\n",
       "      <td>0.031863</td>\n",
       "      <td>0.000531</td>\n",
       "      <td>0.012254</td>\n",
       "      <td>0.008245</td>\n",
       "      <td>0.009916</td>\n",
       "      <td>0.007778</td>\n",
       "      <td>0.010404</td>\n",
       "      <td>0.003395</td>\n",
       "      <td>0.011962</td>\n",
       "      <td>...</td>\n",
       "      <td>0.006358</td>\n",
       "      <td>0.016776</td>\n",
       "      <td>-0.000255</td>\n",
       "      <td>0.007035</td>\n",
       "      <td>0.014779</td>\n",
       "      <td>0.008360</td>\n",
       "      <td>0.021714</td>\n",
       "      <td>0.012842</td>\n",
       "      <td>0.002271</td>\n",
       "      <td>0.015894</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-22 00:00:00+00:00</th>\n",
       "      <td>0.010502</td>\n",
       "      <td>0.011670</td>\n",
       "      <td>-0.011760</td>\n",
       "      <td>-0.000927</td>\n",
       "      <td>0.024746</td>\n",
       "      <td>0.002617</td>\n",
       "      <td>0.009978</td>\n",
       "      <td>0.007473</td>\n",
       "      <td>0.024012</td>\n",
       "      <td>0.003326</td>\n",
       "      <td>...</td>\n",
       "      <td>0.031671</td>\n",
       "      <td>0.002735</td>\n",
       "      <td>0.005054</td>\n",
       "      <td>0.010047</td>\n",
       "      <td>0.038863</td>\n",
       "      <td>0.009977</td>\n",
       "      <td>-0.005448</td>\n",
       "      <td>0.014966</td>\n",
       "      <td>0.014553</td>\n",
       "      <td>0.008027</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-23 00:00:00+00:00</th>\n",
       "      <td>0.011803</td>\n",
       "      <td>0.009219</td>\n",
       "      <td>0.008325</td>\n",
       "      <td>0.012869</td>\n",
       "      <td>0.017178</td>\n",
       "      <td>0.007567</td>\n",
       "      <td>0.013950</td>\n",
       "      <td>0.006365</td>\n",
       "      <td>0.009380</td>\n",
       "      <td>0.008296</td>\n",
       "      <td>...</td>\n",
       "      <td>0.009199</td>\n",
       "      <td>0.009501</td>\n",
       "      <td>0.032702</td>\n",
       "      <td>0.007586</td>\n",
       "      <td>0.011193</td>\n",
       "      <td>0.017237</td>\n",
       "      <td>0.015349</td>\n",
       "      <td>0.010219</td>\n",
       "      <td>0.018773</td>\n",
       "      <td>0.005444</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-24 00:00:00+00:00</th>\n",
       "      <td>-0.003682</td>\n",
       "      <td>0.012022</td>\n",
       "      <td>0.000465</td>\n",
       "      <td>-0.005341</td>\n",
       "      <td>-0.002041</td>\n",
       "      <td>0.000090</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.001820</td>\n",
       "      <td>-0.004224</td>\n",
       "      <td>0.005673</td>\n",
       "      <td>...</td>\n",
       "      <td>0.009623</td>\n",
       "      <td>-0.000620</td>\n",
       "      <td>-0.010724</td>\n",
       "      <td>-0.002127</td>\n",
       "      <td>0.005553</td>\n",
       "      <td>-0.001614</td>\n",
       "      <td>-0.001620</td>\n",
       "      <td>0.001364</td>\n",
       "      <td>0.003975</td>\n",
       "      <td>0.003121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-28 00:00:00+00:00</th>\n",
       "      <td>0.007040</td>\n",
       "      <td>-0.013259</td>\n",
       "      <td>0.009526</td>\n",
       "      <td>-0.011204</td>\n",
       "      <td>0.004953</td>\n",
       "      <td>0.002309</td>\n",
       "      <td>-0.001550</td>\n",
       "      <td>-0.001441</td>\n",
       "      <td>-0.001060</td>\n",
       "      <td>-0.006164</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000503</td>\n",
       "      <td>-0.001064</td>\n",
       "      <td>-0.007439</td>\n",
       "      <td>0.004930</td>\n",
       "      <td>-0.021138</td>\n",
       "      <td>-0.003484</td>\n",
       "      <td>-0.002177</td>\n",
       "      <td>-0.006413</td>\n",
       "      <td>-0.005033</td>\n",
       "      <td>-0.004784</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-29 00:00:00+00:00</th>\n",
       "      <td>0.019443</td>\n",
       "      <td>0.006256</td>\n",
       "      <td>0.010957</td>\n",
       "      <td>0.017976</td>\n",
       "      <td>0.011911</td>\n",
       "      <td>0.005569</td>\n",
       "      <td>0.017542</td>\n",
       "      <td>0.011914</td>\n",
       "      <td>0.011996</td>\n",
       "      <td>0.015224</td>\n",
       "      <td>...</td>\n",
       "      <td>0.013813</td>\n",
       "      <td>0.007964</td>\n",
       "      <td>0.005336</td>\n",
       "      <td>0.011436</td>\n",
       "      <td>0.011283</td>\n",
       "      <td>0.004307</td>\n",
       "      <td>0.005415</td>\n",
       "      <td>0.007235</td>\n",
       "      <td>0.006174</td>\n",
       "      <td>0.008997</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-30 00:00:00+00:00</th>\n",
       "      <td>-0.006384</td>\n",
       "      <td>-0.016085</td>\n",
       "      <td>-0.005254</td>\n",
       "      <td>-0.013056</td>\n",
       "      <td>0.005904</td>\n",
       "      <td>0.002391</td>\n",
       "      <td>-0.012017</td>\n",
       "      <td>0.005124</td>\n",
       "      <td>-0.000524</td>\n",
       "      <td>-0.013256</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.014617</td>\n",
       "      <td>-0.007064</td>\n",
       "      <td>-0.013261</td>\n",
       "      <td>-0.008079</td>\n",
       "      <td>0.001847</td>\n",
       "      <td>-0.006182</td>\n",
       "      <td>-0.005781</td>\n",
       "      <td>-0.002921</td>\n",
       "      <td>-0.012235</td>\n",
       "      <td>-0.001454</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-31 00:00:00+00:00</th>\n",
       "      <td>-0.012432</td>\n",
       "      <td>-0.010532</td>\n",
       "      <td>-0.005879</td>\n",
       "      <td>-0.019199</td>\n",
       "      <td>-0.009372</td>\n",
       "      <td>-0.012481</td>\n",
       "      <td>-0.007953</td>\n",
       "      <td>-0.012844</td>\n",
       "      <td>-0.014064</td>\n",
       "      <td>-0.021745</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.016052</td>\n",
       "      <td>-0.018175</td>\n",
       "      <td>-0.002050</td>\n",
       "      <td>-0.009119</td>\n",
       "      <td>-0.008371</td>\n",
       "      <td>-0.010031</td>\n",
       "      <td>-0.010299</td>\n",
       "      <td>0.001176</td>\n",
       "      <td>-0.006212</td>\n",
       "      <td>-0.007051</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-04 00:00:00+00:00</th>\n",
       "      <td>-0.028282</td>\n",
       "      <td>-0.033988</td>\n",
       "      <td>0.011494</td>\n",
       "      <td>0.000855</td>\n",
       "      <td>-0.027512</td>\n",
       "      <td>-0.017741</td>\n",
       "      <td>-0.044067</td>\n",
       "      <td>-0.025551</td>\n",
       "      <td>-0.020971</td>\n",
       "      <td>-0.015919</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.024767</td>\n",
       "      <td>-0.024922</td>\n",
       "      <td>-0.006276</td>\n",
       "      <td>-0.032711</td>\n",
       "      <td>-0.031051</td>\n",
       "      <td>-0.011520</td>\n",
       "      <td>-0.011489</td>\n",
       "      <td>-0.007604</td>\n",
       "      <td>-0.021614</td>\n",
       "      <td>-0.013564</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-05 00:00:00+00:00</th>\n",
       "      <td>0.004058</td>\n",
       "      <td>-0.009541</td>\n",
       "      <td>-0.006830</td>\n",
       "      <td>-0.025054</td>\n",
       "      <td>-0.004169</td>\n",
       "      <td>0.014629</td>\n",
       "      <td>-0.000247</td>\n",
       "      <td>0.005207</td>\n",
       "      <td>0.004023</td>\n",
       "      <td>-0.007347</td>\n",
       "      <td>...</td>\n",
       "      <td>0.002098</td>\n",
       "      <td>0.014863</td>\n",
       "      <td>0.008511</td>\n",
       "      <td>0.020390</td>\n",
       "      <td>-0.001957</td>\n",
       "      <td>-0.000286</td>\n",
       "      <td>-0.002495</td>\n",
       "      <td>0.020820</td>\n",
       "      <td>-0.010853</td>\n",
       "      <td>0.015647</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1256 rows × 490 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                           Equity(0 [A])  Equity(1 [AAL])  Equity(2 [AAP])  \\\n",
       "2011-01-07 00:00:00+00:00       0.008437         0.014230         0.026702   \n",
       "2011-01-10 00:00:00+00:00      -0.004174         0.006195         0.007435   \n",
       "2011-01-11 00:00:00+00:00      -0.001886        -0.043644        -0.005927   \n",
       "2011-01-12 00:00:00+00:00       0.017254        -0.008237         0.013387   \n",
       "2011-01-13 00:00:00+00:00      -0.004559         0.000955         0.003031   \n",
       "2011-01-14 00:00:00+00:00       0.003439        -0.009156         0.003022   \n",
       "2011-01-18 00:00:00+00:00       0.034254        -0.062085        -0.004286   \n",
       "2011-01-19 00:00:00+00:00      -0.010224        -0.008929         0.008754   \n",
       "2011-01-20 00:00:00+00:00      -0.008496         0.021953        -0.004732   \n",
       "2011-01-21 00:00:00+00:00       0.007873        -0.041038         0.005544   \n",
       "2011-01-24 00:00:00+00:00       0.014646         0.027473        -0.001106   \n",
       "2011-01-25 00:00:00+00:00      -0.006736         0.002982         0.009146   \n",
       "2011-01-26 00:00:00+00:00      -0.030736         0.066133         0.003593   \n",
       "2011-01-27 00:00:00+00:00       0.007721         0.023178        -0.001553   \n",
       "2011-01-28 00:00:00+00:00      -0.018846        -0.080553        -0.000936   \n",
       "2011-01-31 00:00:00+00:00       0.003608        -0.023615        -0.002351   \n",
       "2011-02-01 00:00:00+00:00       0.011654        -0.001047        -0.009218   \n",
       "2011-02-02 00:00:00+00:00       0.010112        -0.039304        -0.027477   \n",
       "2011-02-03 00:00:00+00:00      -0.000289         0.007310         0.014126   \n",
       "2011-02-04 00:00:00+00:00       0.005627        -0.036500         0.024014   \n",
       "2011-02-07 00:00:00+00:00       0.007709         0.052046         0.008114   \n",
       "2011-02-08 00:00:00+00:00       0.010854         0.016455         0.006202   \n",
       "2011-02-09 00:00:00+00:00       0.004664         0.000000         0.016955   \n",
       "2011-02-10 00:00:00+00:00       0.000413        -0.003048        -0.011367   \n",
       "2011-02-11 00:00:00+00:00      -0.007150         0.028364         0.000764   \n",
       "2011-02-14 00:00:00+00:00       0.001663        -0.015790        -0.023274   \n",
       "2011-02-15 00:00:00+00:00      -0.011905         0.011043        -0.003926   \n",
       "2011-02-16 00:00:00+00:00       0.015123         0.001958         0.013860   \n",
       "2011-02-17 00:00:00+00:00      -0.003311        -0.017791        -0.024844   \n",
       "2011-02-18 00:00:00+00:00       0.011078        -0.020103        -0.006693   \n",
       "...                                  ...              ...              ...   \n",
       "2015-11-20 00:00:00+00:00       0.001072        -0.002373         0.002767   \n",
       "2015-11-23 00:00:00+00:00      -0.007094         0.002379        -0.001228   \n",
       "2015-11-24 00:00:00+00:00       0.002085        -0.025309         0.003504   \n",
       "2015-11-25 00:00:00+00:00      -0.008206         0.001938         0.006805   \n",
       "2015-11-27 00:00:00+00:00      -0.003256         0.009201         0.003285   \n",
       "2015-11-30 00:00:00+00:00      -0.010209        -0.010321        -0.012798   \n",
       "2015-12-01 00:00:00+00:00       0.015748         0.048493        -0.002396   \n",
       "2015-12-02 00:00:00+00:00      -0.005284         0.012930        -0.027166   \n",
       "2015-12-03 00:00:00+00:00      -0.009521        -0.012555        -0.019944   \n",
       "2015-12-04 00:00:00+00:00       0.020199         0.039303         0.006779   \n",
       "2015-12-07 00:00:00+00:00      -0.000340         0.018020        -0.029578   \n",
       "2015-12-08 00:00:00+00:00      -0.023307        -0.026876        -0.008866   \n",
       "2015-12-09 00:00:00+00:00      -0.005170        -0.020213         0.022223   \n",
       "2015-12-10 00:00:00+00:00       0.015039         0.010092        -0.009466   \n",
       "2015-12-11 00:00:00+00:00      -0.012227        -0.045356        -0.019179   \n",
       "2015-12-14 00:00:00+00:00      -0.011197        -0.007618        -0.008325   \n",
       "2015-12-15 00:00:00+00:00       0.024683         0.019768         0.057990   \n",
       "2015-12-16 00:00:00+00:00       0.010780         0.014190         0.029771   \n",
       "2015-12-17 00:00:00+00:00      -0.017212        -0.017122        -0.048190   \n",
       "2015-12-18 00:00:00+00:00      -0.041084        -0.032259        -0.022863   \n",
       "2015-12-21 00:00:00+00:00       0.009455         0.031863         0.000531   \n",
       "2015-12-22 00:00:00+00:00       0.010502         0.011670        -0.011760   \n",
       "2015-12-23 00:00:00+00:00       0.011803         0.009219         0.008325   \n",
       "2015-12-24 00:00:00+00:00      -0.003682         0.012022         0.000465   \n",
       "2015-12-28 00:00:00+00:00       0.007040        -0.013259         0.009526   \n",
       "2015-12-29 00:00:00+00:00       0.019443         0.006256         0.010957   \n",
       "2015-12-30 00:00:00+00:00      -0.006384        -0.016085        -0.005254   \n",
       "2015-12-31 00:00:00+00:00      -0.012432        -0.010532        -0.005879   \n",
       "2016-01-04 00:00:00+00:00      -0.028282        -0.033988         0.011494   \n",
       "2016-01-05 00:00:00+00:00       0.004058        -0.009541        -0.006830   \n",
       "\n",
       "                           Equity(3 [AAPL])  Equity(4 [ABBV])  \\\n",
       "2011-01-07 00:00:00+00:00          0.007146          0.000000   \n",
       "2011-01-10 00:00:00+00:00          0.018852          0.000000   \n",
       "2011-01-11 00:00:00+00:00         -0.002367          0.000000   \n",
       "2011-01-12 00:00:00+00:00          0.008133          0.000000   \n",
       "2011-01-13 00:00:00+00:00          0.003657          0.000000   \n",
       "2011-01-14 00:00:00+00:00          0.008106          0.000000   \n",
       "2011-01-18 00:00:00+00:00         -0.022474          0.000000   \n",
       "2011-01-19 00:00:00+00:00         -0.005314          0.000000   \n",
       "2011-01-20 00:00:00+00:00         -0.018189          0.000000   \n",
       "2011-01-21 00:00:00+00:00         -0.017911          0.000000   \n",
       "2011-01-24 00:00:00+00:00          0.032837          0.000000   \n",
       "2011-01-25 00:00:00+00:00          0.011710          0.000000   \n",
       "2011-01-26 00:00:00+00:00          0.007193          0.000000   \n",
       "2011-01-27 00:00:00+00:00         -0.001877          0.000000   \n",
       "2011-01-28 00:00:00+00:00         -0.020710          0.000000   \n",
       "2011-01-31 00:00:00+00:00          0.009578          0.000000   \n",
       "2011-02-01 00:00:00+00:00          0.016818          0.000000   \n",
       "2011-02-02 00:00:00+00:00         -0.002053          0.000000   \n",
       "2011-02-03 00:00:00+00:00         -0.002560          0.000000   \n",
       "2011-02-04 00:00:00+00:00          0.008915          0.000000   \n",
       "2011-02-07 00:00:00+00:00          0.015538          0.000000   \n",
       "2011-02-08 00:00:00+00:00          0.009440          0.000000   \n",
       "2011-02-09 00:00:00+00:00          0.008332          0.000000   \n",
       "2011-02-10 00:00:00+00:00         -0.010109          0.000000   \n",
       "2011-02-11 00:00:00+00:00          0.006505          0.000000   \n",
       "2011-02-14 00:00:00+00:00          0.006529          0.000000   \n",
       "2011-02-15 00:00:00+00:00          0.002016          0.000000   \n",
       "2011-02-16 00:00:00+00:00          0.008967          0.000000   \n",
       "2011-02-17 00:00:00+00:00         -0.013309          0.000000   \n",
       "2011-02-18 00:00:00+00:00         -0.021595          0.000000   \n",
       "...                                     ...               ...   \n",
       "2015-11-20 00:00:00+00:00          0.004381          0.009256   \n",
       "2015-11-23 00:00:00+00:00         -0.012989          0.000646   \n",
       "2015-11-24 00:00:00+00:00          0.009594         -0.000323   \n",
       "2015-11-25 00:00:00+00:00         -0.007151         -0.013744   \n",
       "2015-11-27 00:00:00+00:00         -0.001863         -0.004803   \n",
       "2015-11-30 00:00:00+00:00          0.004159         -0.030838   \n",
       "2015-12-01 00:00:00+00:00         -0.008116          0.014957   \n",
       "2015-12-02 00:00:00+00:00         -0.009030         -0.022022   \n",
       "2015-12-03 00:00:00+00:00         -0.009292         -0.027724   \n",
       "2015-12-04 00:00:00+00:00          0.033246          0.018899   \n",
       "2015-12-07 00:00:00+00:00         -0.006298         -0.015921   \n",
       "2015-12-08 00:00:00+00:00         -0.000425          0.007114   \n",
       "2015-12-09 00:00:00+00:00         -0.022077         -0.011303   \n",
       "2015-12-10 00:00:00+00:00          0.004763         -0.004463   \n",
       "2015-12-11 00:00:00+00:00         -0.025740         -0.031185   \n",
       "2015-12-14 00:00:00+00:00         -0.006189          0.025898   \n",
       "2015-12-15 00:00:00+00:00         -0.017686          0.017133   \n",
       "2015-12-16 00:00:00+00:00          0.007685          0.021998   \n",
       "2015-12-17 00:00:00+00:00         -0.021196         -0.021696   \n",
       "2015-12-18 00:00:00+00:00         -0.027064         -0.011342   \n",
       "2015-12-21 00:00:00+00:00          0.012254          0.008245   \n",
       "2015-12-22 00:00:00+00:00         -0.000927          0.024746   \n",
       "2015-12-23 00:00:00+00:00          0.012869          0.017178   \n",
       "2015-12-24 00:00:00+00:00         -0.005341         -0.002041   \n",
       "2015-12-28 00:00:00+00:00         -0.011204          0.004953   \n",
       "2015-12-29 00:00:00+00:00          0.017976          0.011911   \n",
       "2015-12-30 00:00:00+00:00         -0.013056          0.005904   \n",
       "2015-12-31 00:00:00+00:00         -0.019199         -0.009372   \n",
       "2016-01-04 00:00:00+00:00          0.000855         -0.027512   \n",
       "2016-01-05 00:00:00+00:00         -0.025054         -0.004169   \n",
       "\n",
       "                           Equity(5 [ABC])  Equity(6 [ABT])  Equity(7 [ACN])  \\\n",
       "2011-01-07 00:00:00+00:00         0.001994         0.004165         0.001648   \n",
       "2011-01-10 00:00:00+00:00        -0.005714        -0.008896        -0.008854   \n",
       "2011-01-11 00:00:00+00:00         0.009783        -0.002067         0.013717   \n",
       "2011-01-12 00:00:00+00:00        -0.005979        -0.001011         0.022969   \n",
       "2011-01-13 00:00:00+00:00         0.014925        -0.004451        -0.000400   \n",
       "2011-01-14 00:00:00+00:00         0.001395        -0.010111         0.002590   \n",
       "2011-01-18 00:00:00+00:00         0.020889         0.006621         0.006998   \n",
       "2011-01-19 00:00:00+00:00        -0.017144         0.002753        -0.002962   \n",
       "2011-01-20 00:00:00+00:00         0.004794         0.013322         0.018713   \n",
       "2011-01-21 00:00:00+00:00         0.010642        -0.000853        -0.001952   \n",
       "2011-01-24 00:00:00+00:00         0.005249         0.005223         0.008420   \n",
       "2011-01-25 00:00:00+00:00        -0.009363        -0.004347         0.004859   \n",
       "2011-01-26 00:00:00+00:00         0.012227        -0.025241         0.012192   \n",
       "2011-01-27 00:00:00+00:00         0.011833        -0.007928         0.000179   \n",
       "2011-01-28 00:00:00+00:00        -0.022262        -0.019200        -0.016035   \n",
       "2011-01-31 00:00:00+00:00        -0.003893        -0.007248        -0.000980   \n",
       "2011-02-01 00:00:00+00:00         0.011976         0.001546         0.017498   \n",
       "2011-02-02 00:00:00+00:00        -0.021197         0.011068         0.003632   \n",
       "2011-02-03 00:00:00+00:00        -0.003662         0.005894         0.004178   \n",
       "2011-02-04 00:00:00+00:00         0.033047         0.002616        -0.004360   \n",
       "2011-02-07 00:00:00+00:00        -0.002178        -0.009341         0.002279   \n",
       "2011-02-08 00:00:00+00:00         0.002182        -0.001738        -0.000557   \n",
       "2011-02-09 00:00:00+00:00         0.003006        -0.001530         0.001138   \n",
       "2011-02-10 00:00:00+00:00         0.001101        -0.001110         0.005503   \n",
       "2011-02-11 00:00:00+00:00        -0.001375         0.001534        -0.011146   \n",
       "2011-02-14 00:00:00+00:00         0.005750         0.009245         0.000202   \n",
       "2011-02-15 00:00:00+00:00        -0.007329         0.016750        -0.008021   \n",
       "2011-02-16 00:00:00+00:00        -0.003554        -0.010502         0.027329   \n",
       "2011-02-17 00:00:00+00:00         0.029148         0.001301         0.011784   \n",
       "2011-02-18 00:00:00+00:00         0.009620         0.012106        -0.007953   \n",
       "...                                    ...              ...              ...   \n",
       "2015-11-20 00:00:00+00:00        -0.000905         0.006113         0.006430   \n",
       "2015-11-23 00:00:00+00:00        -0.003728        -0.012381        -0.001206   \n",
       "2015-11-24 00:00:00+00:00        -0.002336         0.000210        -0.004537   \n",
       "2015-11-25 00:00:00+00:00         0.004365        -0.000862        -0.002338   \n",
       "2015-11-27 00:00:00+00:00         0.000612         0.000210         0.003363   \n",
       "2015-11-30 00:00:00+00:00        -0.003542        -0.011004        -0.002228   \n",
       "2015-12-01 00:00:00+00:00         0.008718         0.012022         0.008480   \n",
       "2015-12-02 00:00:00+00:00        -0.006534        -0.005287        -0.004991   \n",
       "2015-12-03 00:00:00+00:00        -0.001415        -0.023650        -0.015429   \n",
       "2015-12-04 00:00:00+00:00         0.011957         0.026046         0.029924   \n",
       "2015-12-07 00:00:00+00:00         0.000898         0.005727        -0.001463   \n",
       "2015-12-08 00:00:00+00:00         0.004906        -0.000209        -0.000280   \n",
       "2015-12-09 00:00:00+00:00         0.001984        -0.012948        -0.014876   \n",
       "2015-12-10 00:00:00+00:00         0.012720         0.007772         0.002897   \n",
       "2015-12-11 00:00:00+00:00         0.001280        -0.020962        -0.021380   \n",
       "2015-12-14 00:00:00+00:00         0.004406         0.010145         0.010071   \n",
       "2015-12-15 00:00:00+00:00        -0.008194         0.017415         0.003386   \n",
       "2015-12-16 00:00:00+00:00        -0.000985         0.010080         0.022107   \n",
       "2015-12-17 00:00:00+00:00         0.007386        -0.017153        -0.053355   \n",
       "2015-12-18 00:00:00+00:00        -0.004497        -0.034461        -0.012883   \n",
       "2015-12-21 00:00:00+00:00         0.009916         0.007778         0.010404   \n",
       "2015-12-22 00:00:00+00:00         0.002617         0.009978         0.007473   \n",
       "2015-12-23 00:00:00+00:00         0.007567         0.013950         0.006365   \n",
       "2015-12-24 00:00:00+00:00         0.000090         0.000000        -0.001820   \n",
       "2015-12-28 00:00:00+00:00         0.002309        -0.001550        -0.001441   \n",
       "2015-12-29 00:00:00+00:00         0.005569         0.017542         0.011914   \n",
       "2015-12-30 00:00:00+00:00         0.002391        -0.012017         0.005124   \n",
       "2015-12-31 00:00:00+00:00        -0.012481        -0.007953        -0.012844   \n",
       "2016-01-04 00:00:00+00:00        -0.017741        -0.044067        -0.025551   \n",
       "2016-01-05 00:00:00+00:00         0.014629        -0.000247         0.005207   \n",
       "\n",
       "                           Equity(8 [ADBE])  Equity(9 [ADI])  \\\n",
       "2011-01-07 00:00:00+00:00         -0.007127        -0.005818   \n",
       "2011-01-10 00:00:00+00:00          0.028714         0.002926   \n",
       "2011-01-11 00:00:00+00:00          0.000607         0.008753   \n",
       "2011-01-12 00:00:00+00:00          0.017950         0.000257   \n",
       "2011-01-13 00:00:00+00:00         -0.005719        -0.005012   \n",
       "2011-01-14 00:00:00+00:00          0.012283         0.019827   \n",
       "2011-01-18 00:00:00+00:00          0.011542         0.032645   \n",
       "2011-01-19 00:00:00+00:00         -0.007899        -0.020575   \n",
       "2011-01-20 00:00:00+00:00         -0.012386        -0.002818   \n",
       "2011-01-21 00:00:00+00:00         -0.006569        -0.004113   \n",
       "2011-01-24 00:00:00+00:00          0.022843         0.014974   \n",
       "2011-01-25 00:00:00+00:00         -0.013811        -0.014505   \n",
       "2011-01-26 00:00:00+00:00         -0.001192         0.002837   \n",
       "2011-01-27 00:00:00+00:00          0.009845         0.007480   \n",
       "2011-01-28 00:00:00+00:00         -0.040177        -0.022460   \n",
       "2011-01-31 00:00:00+00:00          0.017236         0.013818   \n",
       "2011-02-01 00:00:00+00:00          0.013918         0.021624   \n",
       "2011-02-02 00:00:00+00:00         -0.002387         0.002280   \n",
       "2011-02-03 00:00:00+00:00          0.002991        -0.013341   \n",
       "2011-02-04 00:00:00+00:00         -0.005070         0.019659   \n",
       "2011-02-07 00:00:00+00:00          0.005995        -0.003514   \n",
       "2011-02-08 00:00:00+00:00          0.000298        -0.006010   \n",
       "2011-02-09 00:00:00+00:00         -0.016682         0.004781   \n",
       "2011-02-10 00:00:00+00:00          0.016965         0.004513   \n",
       "2011-02-11 00:00:00+00:00          0.002979         0.015007   \n",
       "2011-02-14 00:00:00+00:00          0.005643         0.009877   \n",
       "2011-02-15 00:00:00+00:00          0.002363         0.000239   \n",
       "2011-02-16 00:00:00+00:00          0.022098        -0.003905   \n",
       "2011-02-17 00:00:00+00:00          0.008360         0.008559   \n",
       "2011-02-18 00:00:00+00:00          0.011721        -0.001691   \n",
       "...                                     ...              ...   \n",
       "2015-11-20 00:00:00+00:00          0.000545        -0.005843   \n",
       "2015-11-23 00:00:00+00:00          0.001634        -0.044107   \n",
       "2015-11-24 00:00:00+00:00          0.000435         0.063741   \n",
       "2015-11-25 00:00:00+00:00         -0.002500        -0.002810   \n",
       "2015-11-27 00:00:00+00:00          0.004359         0.003315   \n",
       "2015-11-30 00:00:00+00:00         -0.007703         0.019522   \n",
       "2015-12-01 00:00:00+00:00          0.011918        -0.000970   \n",
       "2015-12-02 00:00:00+00:00         -0.005727        -0.006990   \n",
       "2015-12-03 00:00:00+00:00         -0.022930        -0.027826   \n",
       "2015-12-04 00:00:00+00:00          0.029696         0.002713   \n",
       "2015-12-07 00:00:00+00:00         -0.032188        -0.011988   \n",
       "2015-12-08 00:00:00+00:00          0.023661        -0.008216   \n",
       "2015-12-09 00:00:00+00:00         -0.023550        -0.023608   \n",
       "2015-12-10 00:00:00+00:00         -0.006699         0.008821   \n",
       "2015-12-11 00:00:00+00:00          0.027653        -0.003843   \n",
       "2015-12-14 00:00:00+00:00          0.020127        -0.001938   \n",
       "2015-12-15 00:00:00+00:00          0.008149        -0.004743   \n",
       "2015-12-16 00:00:00+00:00          0.016379         0.017336   \n",
       "2015-12-17 00:00:00+00:00         -0.014232        -0.024510   \n",
       "2015-12-18 00:00:00+00:00         -0.030679        -0.016940   \n",
       "2015-12-21 00:00:00+00:00          0.003395         0.011962   \n",
       "2015-12-22 00:00:00+00:00          0.024012         0.003326   \n",
       "2015-12-23 00:00:00+00:00          0.009380         0.008296   \n",
       "2015-12-24 00:00:00+00:00         -0.004224         0.005673   \n",
       "2015-12-28 00:00:00+00:00         -0.001060        -0.006164   \n",
       "2015-12-29 00:00:00+00:00          0.011996         0.015224   \n",
       "2015-12-30 00:00:00+00:00         -0.000524        -0.013256   \n",
       "2015-12-31 00:00:00+00:00         -0.014064        -0.021745   \n",
       "2016-01-04 00:00:00+00:00         -0.020971        -0.015919   \n",
       "2016-01-05 00:00:00+00:00          0.004023        -0.007347   \n",
       "\n",
       "                                 ...          Equity(481 [XL])  \\\n",
       "2011-01-07 00:00:00+00:00        ...                 -0.001838   \n",
       "2011-01-10 00:00:00+00:00        ...                  0.000947   \n",
       "2011-01-11 00:00:00+00:00        ...                  0.001314   \n",
       "2011-01-12 00:00:00+00:00        ...                  0.004986   \n",
       "2011-01-13 00:00:00+00:00        ...                  0.030499   \n",
       "2011-01-14 00:00:00+00:00        ...                  0.026607   \n",
       "2011-01-18 00:00:00+00:00        ...                  0.001678   \n",
       "2011-01-19 00:00:00+00:00        ...                 -0.014834   \n",
       "2011-01-20 00:00:00+00:00        ...                 -0.024512   \n",
       "2011-01-21 00:00:00+00:00        ...                  0.000000   \n",
       "2011-01-24 00:00:00+00:00        ...                  0.012359   \n",
       "2011-01-25 00:00:00+00:00        ...                  0.002178   \n",
       "2011-01-26 00:00:00+00:00        ...                  0.002628   \n",
       "2011-01-27 00:00:00+00:00        ...                  0.014267   \n",
       "2011-01-28 00:00:00+00:00        ...                 -0.025647   \n",
       "2011-01-31 00:00:00+00:00        ...                  0.004846   \n",
       "2011-02-01 00:00:00+00:00        ...                  0.015687   \n",
       "2011-02-02 00:00:00+00:00        ...                 -0.012846   \n",
       "2011-02-03 00:00:00+00:00        ...                  0.010430   \n",
       "2011-02-04 00:00:00+00:00        ...                  0.009471   \n",
       "2011-02-07 00:00:00+00:00        ...                  0.006801   \n",
       "2011-02-08 00:00:00+00:00        ...                  0.003846   \n",
       "2011-02-09 00:00:00+00:00        ...                 -0.011837   \n",
       "2011-02-10 00:00:00+00:00        ...                 -0.008947   \n",
       "2011-02-11 00:00:00+00:00        ...                  0.001705   \n",
       "2011-02-14 00:00:00+00:00        ...                 -0.011616   \n",
       "2011-02-15 00:00:00+00:00        ...                 -0.006079   \n",
       "2011-02-16 00:00:00+00:00        ...                  0.009174   \n",
       "2011-02-17 00:00:00+00:00        ...                  0.015656   \n",
       "2011-02-18 00:00:00+00:00        ...                  0.053404   \n",
       "...                              ...                       ...   \n",
       "2015-11-20 00:00:00+00:00        ...                  0.008131   \n",
       "2015-11-23 00:00:00+00:00        ...                 -0.004696   \n",
       "2015-11-24 00:00:00+00:00        ...                 -0.000777   \n",
       "2015-11-25 00:00:00+00:00        ...                 -0.008888   \n",
       "2015-11-27 00:00:00+00:00        ...                  0.004736   \n",
       "2015-11-30 00:00:00+00:00        ...                  0.004212   \n",
       "2015-12-01 00:00:00+00:00        ...                  0.015192   \n",
       "2015-12-02 00:00:00+00:00        ...                 -0.003858   \n",
       "2015-12-03 00:00:00+00:00        ...                 -0.008294   \n",
       "2015-12-04 00:00:00+00:00        ...                  0.022211   \n",
       "2015-12-07 00:00:00+00:00        ...                  0.000000   \n",
       "2015-12-08 00:00:00+00:00        ...                 -0.004606   \n",
       "2015-12-09 00:00:00+00:00        ...                 -0.013092   \n",
       "2015-12-10 00:00:00+00:00        ...                 -0.006757   \n",
       "2015-12-11 00:00:00+00:00        ...                 -0.014938   \n",
       "2015-12-14 00:00:00+00:00        ...                  0.007216   \n",
       "2015-12-15 00:00:00+00:00        ...                  0.015392   \n",
       "2015-12-16 00:00:00+00:00        ...                  0.004713   \n",
       "2015-12-17 00:00:00+00:00        ...                 -0.001564   \n",
       "2015-12-18 00:00:00+00:00        ...                 -0.019013   \n",
       "2015-12-21 00:00:00+00:00        ...                  0.006358   \n",
       "2015-12-22 00:00:00+00:00        ...                  0.031671   \n",
       "2015-12-23 00:00:00+00:00        ...                  0.009199   \n",
       "2015-12-24 00:00:00+00:00        ...                  0.009623   \n",
       "2015-12-28 00:00:00+00:00        ...                  0.000503   \n",
       "2015-12-29 00:00:00+00:00        ...                  0.013813   \n",
       "2015-12-30 00:00:00+00:00        ...                 -0.014617   \n",
       "2015-12-31 00:00:00+00:00        ...                 -0.016052   \n",
       "2016-01-04 00:00:00+00:00        ...                 -0.024767   \n",
       "2016-01-05 00:00:00+00:00        ...                  0.002098   \n",
       "\n",
       "                           Equity(482 [XLNX])  Equity(483 [XOM])  \\\n",
       "2011-01-07 00:00:00+00:00           -0.005619           0.005461   \n",
       "2011-01-10 00:00:00+00:00            0.007814          -0.006081   \n",
       "2011-01-11 00:00:00+00:00            0.010179           0.007442   \n",
       "2011-01-12 00:00:00+00:00            0.015666           0.011763   \n",
       "2011-01-13 00:00:00+00:00           -0.003217           0.001694   \n",
       "2011-01-14 00:00:00+00:00            0.025894           0.014743   \n",
       "2011-01-18 00:00:00+00:00            0.002501           0.011163   \n",
       "2011-01-19 00:00:00+00:00           -0.023590          -0.005968   \n",
       "2011-01-20 00:00:00+00:00            0.007744          -0.006261   \n",
       "2011-01-21 00:00:00+00:00            0.000615           0.015825   \n",
       "2011-01-24 00:00:00+00:00            0.016011          -0.004943   \n",
       "2011-01-25 00:00:00+00:00            0.006273           0.001154   \n",
       "2011-01-26 00:00:00+00:00            0.005934           0.012453   \n",
       "2011-01-27 00:00:00+00:00            0.021169           0.002751   \n",
       "2011-01-28 00:00:00+00:00           -0.020108          -0.011131   \n",
       "2011-01-31 00:00:00+00:00            0.000298           0.021396   \n",
       "2011-02-01 00:00:00+00:00            0.032003           0.040037   \n",
       "2011-02-02 00:00:00+00:00           -0.004518          -0.005958   \n",
       "2011-02-03 00:00:00+00:00           -0.008169           0.000347   \n",
       "2011-02-04 00:00:00+00:00            0.024709          -0.001917   \n",
       "2011-02-07 00:00:00+00:00           -0.005073           0.007803   \n",
       "2011-02-08 00:00:00+00:00            0.001795          -0.006077   \n",
       "2011-02-09 00:00:00+00:00           -0.001792          -0.005178   \n",
       "2011-02-10 00:00:00+00:00            0.003914           0.007876   \n",
       "2011-02-11 00:00:00+00:00            0.010765          -0.004562   \n",
       "2011-02-14 00:00:00+00:00            0.000318           0.025230   \n",
       "2011-02-15 00:00:00+00:00           -0.001804          -0.022853   \n",
       "2011-02-16 00:00:00+00:00            0.003863           0.008682   \n",
       "2011-02-17 00:00:00+00:00            0.000318           0.002275   \n",
       "2011-02-18 00:00:00+00:00            0.001447           0.007393   \n",
       "...                                       ...                ...   \n",
       "2015-11-20 00:00:00+00:00            0.000412          -0.006352   \n",
       "2015-11-23 00:00:00+00:00           -0.006955           0.006131   \n",
       "2015-11-24 00:00:00+00:00            0.012960           0.019935   \n",
       "2015-11-25 00:00:00+00:00           -0.004458          -0.007690   \n",
       "2015-11-27 00:00:00+00:00            0.004478          -0.000257   \n",
       "2015-11-30 00:00:00+00:00            0.009348           0.005294   \n",
       "2015-12-01 00:00:00+00:00            0.011075           0.002821   \n",
       "2015-12-02 00:00:00+00:00           -0.024693          -0.028571   \n",
       "2015-12-03 00:00:00+00:00           -0.010820          -0.014327   \n",
       "2015-12-04 00:00:00+00:00            0.010326           0.005736   \n",
       "2015-12-07 00:00:00+00:00           -0.008791          -0.026122   \n",
       "2015-12-08 00:00:00+00:00           -0.003910          -0.028251   \n",
       "2015-12-09 00:00:00+00:00           -0.009934           0.013390   \n",
       "2015-12-10 00:00:00+00:00            0.001883           0.000798   \n",
       "2015-12-11 00:00:00+00:00           -0.012713          -0.017840   \n",
       "2015-12-14 00:00:00+00:00           -0.000941           0.022738   \n",
       "2015-12-15 00:00:00+00:00            0.013516           0.044710   \n",
       "2015-12-16 00:00:00+00:00            0.000531          -0.003522   \n",
       "2015-12-17 00:00:00+00:00           -0.018147          -0.015037   \n",
       "2015-12-18 00:00:00+00:00           -0.012314          -0.008724   \n",
       "2015-12-21 00:00:00+00:00            0.016776          -0.000255   \n",
       "2015-12-22 00:00:00+00:00            0.002735           0.005054   \n",
       "2015-12-23 00:00:00+00:00            0.009501           0.032702   \n",
       "2015-12-24 00:00:00+00:00           -0.000620          -0.010724   \n",
       "2015-12-28 00:00:00+00:00           -0.001064          -0.007439   \n",
       "2015-12-29 00:00:00+00:00            0.007964           0.005336   \n",
       "2015-12-30 00:00:00+00:00           -0.007064          -0.013261   \n",
       "2015-12-31 00:00:00+00:00           -0.018175          -0.002050   \n",
       "2016-01-04 00:00:00+00:00           -0.024922          -0.006276   \n",
       "2016-01-05 00:00:00+00:00            0.014863           0.008511   \n",
       "\n",
       "                           Equity(484 [XRAY])  Equity(485 [XRX])  \\\n",
       "2011-01-07 00:00:00+00:00           -0.004044          -0.013953   \n",
       "2011-01-10 00:00:00+00:00            0.010466           0.009733   \n",
       "2011-01-11 00:00:00+00:00            0.007351           0.006116   \n",
       "2011-01-12 00:00:00+00:00            0.027182           0.004386   \n",
       "2011-01-13 00:00:00+00:00            0.000547          -0.018235   \n",
       "2011-01-14 00:00:00+00:00           -0.000287           0.026494   \n",
       "2011-01-18 00:00:00+00:00            0.011589           0.006044   \n",
       "2011-01-19 00:00:00+00:00           -0.019899          -0.012847   \n",
       "2011-01-20 00:00:00+00:00           -0.000841          -0.033798   \n",
       "2011-01-21 00:00:00+00:00           -0.003048          -0.000872   \n",
       "2011-01-24 00:00:00+00:00            0.001660           0.008049   \n",
       "2011-01-25 00:00:00+00:00            0.001134           0.015143   \n",
       "2011-01-26 00:00:00+00:00            0.000552          -0.076291   \n",
       "2011-01-27 00:00:00+00:00            0.016396           0.024664   \n",
       "2011-01-28 00:00:00+00:00           -0.021871          -0.022229   \n",
       "2011-01-31 00:00:00+00:00           -0.007560           0.006615   \n",
       "2011-02-01 00:00:00+00:00            0.024795           0.024498   \n",
       "2011-02-02 00:00:00+00:00           -0.010390          -0.001827   \n",
       "2011-02-03 00:00:00+00:00            0.008556           0.004596   \n",
       "2011-02-04 00:00:00+00:00            0.003048          -0.005506   \n",
       "2011-02-07 00:00:00+00:00            0.006852           0.002768   \n",
       "2011-02-08 00:00:00+00:00            0.005182          -0.002761   \n",
       "2011-02-09 00:00:00+00:00           -0.018441           0.003705   \n",
       "2011-02-10 00:00:00+00:00            0.005512          -0.004624   \n",
       "2011-02-11 00:00:00+00:00            0.007147           0.012021   \n",
       "2011-02-14 00:00:00+00:00           -0.005443           0.005476   \n",
       "2011-02-15 00:00:00+00:00            0.004097           0.003604   \n",
       "2011-02-16 00:00:00+00:00            0.000285           0.027093   \n",
       "2011-02-17 00:00:00+00:00           -0.001911           0.000000   \n",
       "2011-02-18 00:00:00+00:00            0.013148          -0.004390   \n",
       "...                                       ...                ...   \n",
       "2015-11-20 00:00:00+00:00            0.002793           0.002899   \n",
       "2015-11-23 00:00:00+00:00            0.007345           0.027692   \n",
       "2015-11-24 00:00:00+00:00           -0.009563          -0.012992   \n",
       "2015-11-25 00:00:00+00:00           -0.002792          -0.001913   \n",
       "2015-11-27 00:00:00+00:00            0.002633           0.003795   \n",
       "2015-11-30 00:00:00+00:00           -0.007363          -0.007524   \n",
       "2015-12-01 00:00:00+00:00            0.021600           0.013276   \n",
       "2015-12-02 00:00:00+00:00            0.007572          -0.029962   \n",
       "2015-12-03 00:00:00+00:00            0.002733          -0.000959   \n",
       "2015-12-04 00:00:00+00:00            0.007495           0.011599   \n",
       "2015-12-07 00:00:00+00:00           -0.001900          -0.029576   \n",
       "2015-12-08 00:00:00+00:00           -0.012067          -0.004930   \n",
       "2015-12-09 00:00:00+00:00           -0.021066          -0.009869   \n",
       "2015-12-10 00:00:00+00:00           -0.000317           0.014970   \n",
       "2015-12-11 00:00:00+00:00           -0.017755          -0.012793   \n",
       "2015-12-14 00:00:00+00:00           -0.001835          -0.017913   \n",
       "2015-12-15 00:00:00+00:00            0.004357           0.016222   \n",
       "2015-12-16 00:00:00+00:00            0.008507           0.024937   \n",
       "2015-12-17 00:00:00+00:00           -0.003142          -0.007787   \n",
       "2015-12-18 00:00:00+00:00           -0.010451          -0.003944   \n",
       "2015-12-21 00:00:00+00:00            0.007035           0.014779   \n",
       "2015-12-22 00:00:00+00:00            0.010047           0.038863   \n",
       "2015-12-23 00:00:00+00:00            0.007586           0.011193   \n",
       "2015-12-24 00:00:00+00:00           -0.002127           0.005553   \n",
       "2015-12-28 00:00:00+00:00            0.004930          -0.021138   \n",
       "2015-12-29 00:00:00+00:00            0.011436           0.011283   \n",
       "2015-12-30 00:00:00+00:00           -0.008079           0.001847   \n",
       "2015-12-31 00:00:00+00:00           -0.009119          -0.008371   \n",
       "2016-01-04 00:00:00+00:00           -0.032711          -0.031051   \n",
       "2016-01-05 00:00:00+00:00            0.020390          -0.001957   \n",
       "\n",
       "                           Equity(486 [XYL])  Equity(487 [YUM])  \\\n",
       "2011-01-07 00:00:00+00:00           0.000000           0.012457   \n",
       "2011-01-10 00:00:00+00:00           0.000000           0.001440   \n",
       "2011-01-11 00:00:00+00:00           0.000000          -0.006470   \n",
       "2011-01-12 00:00:00+00:00           0.000000           0.002631   \n",
       "2011-01-13 00:00:00+00:00           0.000000          -0.005084   \n",
       "2011-01-14 00:00:00+00:00           0.000000          -0.021661   \n",
       "2011-01-18 00:00:00+00:00           0.000000           0.029453   \n",
       "2011-01-19 00:00:00+00:00           0.000000           0.000818   \n",
       "2011-01-20 00:00:00+00:00           0.000000          -0.013182   \n",
       "2011-01-21 00:00:00+00:00           0.000000          -0.007590   \n",
       "2011-01-24 00:00:00+00:00           0.000000           0.000601   \n",
       "2011-01-25 00:00:00+00:00           0.000000          -0.006208   \n",
       "2011-01-26 00:00:00+00:00           0.000000          -0.004803   \n",
       "2011-01-27 00:00:00+00:00           0.000000          -0.003746   \n",
       "2011-01-28 00:00:00+00:00           0.000000          -0.025001   \n",
       "2011-01-31 00:00:00+00:00           0.000000           0.007748   \n",
       "2011-02-01 00:00:00+00:00           0.000000           0.014102   \n",
       "2011-02-02 00:00:00+00:00           0.000000           0.006562   \n",
       "2011-02-03 00:00:00+00:00           0.000000           0.031413   \n",
       "2011-02-04 00:00:00+00:00           0.000000           0.001408   \n",
       "2011-02-07 00:00:00+00:00           0.000000           0.002028   \n",
       "2011-02-08 00:00:00+00:00           0.000000           0.003851   \n",
       "2011-02-09 00:00:00+00:00           0.000000          -0.001821   \n",
       "2011-02-10 00:00:00+00:00           0.000000           0.004853   \n",
       "2011-02-11 00:00:00+00:00           0.000000           0.000616   \n",
       "2011-02-14 00:00:00+00:00           0.000000           0.010657   \n",
       "2011-02-15 00:00:00+00:00           0.000000           0.008526   \n",
       "2011-02-16 00:00:00+00:00           0.000000           0.008898   \n",
       "2011-02-17 00:00:00+00:00           0.000000           0.003906   \n",
       "2011-02-18 00:00:00+00:00           0.000000          -0.004110   \n",
       "...                                      ...                ...   \n",
       "2015-11-20 00:00:00+00:00          -0.004498           0.015060   \n",
       "2015-11-23 00:00:00+00:00           0.001322          -0.000966   \n",
       "2015-11-24 00:00:00+00:00          -0.001871          -0.004252   \n",
       "2015-11-25 00:00:00+00:00           0.004824           0.002894   \n",
       "2015-11-27 00:00:00+00:00          -0.002140           0.005105   \n",
       "2015-11-30 00:00:00+00:00          -0.006928          -0.006183   \n",
       "2015-12-01 00:00:00+00:00           0.008582           0.027170   \n",
       "2015-12-02 00:00:00+00:00          -0.018335           0.006313   \n",
       "2015-12-03 00:00:00+00:00          -0.005676          -0.024272   \n",
       "2015-12-04 00:00:00+00:00           0.024774           0.041159   \n",
       "2015-12-07 00:00:00+00:00          -0.019647           0.003540   \n",
       "2015-12-08 00:00:00+00:00          -0.017074          -0.010735   \n",
       "2015-12-09 00:00:00+00:00          -0.000570          -0.023679   \n",
       "2015-12-10 00:00:00+00:00           0.012138          -0.008256   \n",
       "2015-12-11 00:00:00+00:00          -0.013062          -0.025836   \n",
       "2015-12-14 00:00:00+00:00           0.011580           0.004910   \n",
       "2015-12-15 00:00:00+00:00           0.001635           0.013410   \n",
       "2015-12-16 00:00:00+00:00           0.020719           0.012809   \n",
       "2015-12-17 00:00:00+00:00          -0.026697          -0.018224   \n",
       "2015-12-18 00:00:00+00:00          -0.017002          -0.004991   \n",
       "2015-12-21 00:00:00+00:00           0.008360           0.021714   \n",
       "2015-12-22 00:00:00+00:00           0.009977          -0.005448   \n",
       "2015-12-23 00:00:00+00:00           0.017237           0.015349   \n",
       "2015-12-24 00:00:00+00:00          -0.001614          -0.001620   \n",
       "2015-12-28 00:00:00+00:00          -0.003484          -0.002177   \n",
       "2015-12-29 00:00:00+00:00           0.004307           0.005415   \n",
       "2015-12-30 00:00:00+00:00          -0.006182          -0.005781   \n",
       "2015-12-31 00:00:00+00:00          -0.010031          -0.010299   \n",
       "2016-01-04 00:00:00+00:00          -0.011520          -0.011489   \n",
       "2016-01-05 00:00:00+00:00          -0.000286          -0.002495   \n",
       "\n",
       "                           Equity(488 [ZBH])  Equity(489 [ZION])  \\\n",
       "2011-01-07 00:00:00+00:00          -0.000181           -0.010458   \n",
       "2011-01-10 00:00:00+00:00           0.007784           -0.017945   \n",
       "2011-01-11 00:00:00+00:00           0.035676            0.007467   \n",
       "2011-01-12 00:00:00+00:00           0.014741           -0.011903   \n",
       "2011-01-13 00:00:00+00:00          -0.004665           -0.009178   \n",
       "2011-01-14 00:00:00+00:00           0.005949            0.033177   \n",
       "2011-01-18 00:00:00+00:00           0.006998           -0.008534   \n",
       "2011-01-19 00:00:00+00:00          -0.004098           -0.018433   \n",
       "2011-01-20 00:00:00+00:00          -0.001612           -0.007972   \n",
       "2011-01-21 00:00:00+00:00           0.009325            0.024020   \n",
       "2011-01-24 00:00:00+00:00          -0.016501           -0.023021   \n",
       "2011-01-25 00:00:00+00:00           0.017142           -0.008836   \n",
       "2011-01-26 00:00:00+00:00          -0.019524           -0.010626   \n",
       "2011-01-27 00:00:00+00:00           0.068754            0.020160   \n",
       "2011-01-28 00:00:00+00:00          -0.008472           -0.013873   \n",
       "2011-01-31 00:00:00+00:00           0.009902            0.006378   \n",
       "2011-02-01 00:00:00+00:00           0.017746            0.030970   \n",
       "2011-02-02 00:00:00+00:00           0.005161           -0.003706   \n",
       "2011-02-03 00:00:00+00:00          -0.000333           -0.000394   \n",
       "2011-02-04 00:00:00+00:00           0.002471            0.016111   \n",
       "2011-02-07 00:00:00+00:00          -0.010876            0.027617   \n",
       "2011-02-08 00:00:00+00:00          -0.000495            0.004780   \n",
       "2011-02-09 00:00:00+00:00          -0.009851           -0.004757   \n",
       "2011-02-10 00:00:00+00:00           0.011449           -0.026498   \n",
       "2011-02-11 00:00:00+00:00           0.009660            0.014256   \n",
       "2011-02-14 00:00:00+00:00           0.002484           -0.010021   \n",
       "2011-02-15 00:00:00+00:00          -0.001815           -0.004461   \n",
       "2011-02-16 00:00:00+00:00           0.010557            0.001206   \n",
       "2011-02-17 00:00:00+00:00           0.015325           -0.003227   \n",
       "2011-02-18 00:00:00+00:00           0.023782           -0.017960   \n",
       "...                                      ...                 ...   \n",
       "2015-11-20 00:00:00+00:00          -0.003176            0.000000   \n",
       "2015-11-23 00:00:00+00:00          -0.008581           -0.001992   \n",
       "2015-11-24 00:00:00+00:00          -0.009043            0.002650   \n",
       "2015-11-25 00:00:00+00:00          -0.006174           -0.000309   \n",
       "2015-11-27 00:00:00+00:00          -0.002869            0.005013   \n",
       "2015-11-30 00:00:00+00:00           0.000101           -0.004339   \n",
       "2015-12-01 00:00:00+00:00           0.016927            0.015028   \n",
       "2015-12-02 00:00:00+00:00          -0.004473           -0.015448   \n",
       "2015-12-03 00:00:00+00:00          -0.028367           -0.015725   \n",
       "2015-12-04 00:00:00+00:00           0.011977            0.024452   \n",
       "2015-12-07 00:00:00+00:00          -0.001384           -0.042085   \n",
       "2015-12-08 00:00:00+00:00          -0.006277           -0.031813   \n",
       "2015-12-09 00:00:00+00:00           0.002205           -0.007490   \n",
       "2015-12-10 00:00:00+00:00          -0.000297            0.014759   \n",
       "2015-12-11 00:00:00+00:00          -0.010112           -0.029782   \n",
       "2015-12-14 00:00:00+00:00           0.005356           -0.014991   \n",
       "2015-12-15 00:00:00+00:00           0.015787            0.035626   \n",
       "2015-12-16 00:00:00+00:00           0.008606            0.010755   \n",
       "2015-12-17 00:00:00+00:00          -0.011966           -0.015960   \n",
       "2015-12-18 00:00:00+00:00          -0.017384           -0.037845   \n",
       "2015-12-21 00:00:00+00:00           0.012842            0.002271   \n",
       "2015-12-22 00:00:00+00:00           0.014966            0.014553   \n",
       "2015-12-23 00:00:00+00:00           0.010219            0.018773   \n",
       "2015-12-24 00:00:00+00:00           0.001364            0.003975   \n",
       "2015-12-28 00:00:00+00:00          -0.006413           -0.005033   \n",
       "2015-12-29 00:00:00+00:00           0.007235            0.006174   \n",
       "2015-12-30 00:00:00+00:00          -0.002921           -0.012235   \n",
       "2015-12-31 00:00:00+00:00           0.001176           -0.006212   \n",
       "2016-01-04 00:00:00+00:00          -0.007604           -0.021614   \n",
       "2016-01-05 00:00:00+00:00           0.020820           -0.010853   \n",
       "\n",
       "                           Equity(490 [ZTS])  \n",
       "2011-01-07 00:00:00+00:00           0.000000  \n",
       "2011-01-10 00:00:00+00:00           0.000000  \n",
       "2011-01-11 00:00:00+00:00           0.000000  \n",
       "2011-01-12 00:00:00+00:00           0.000000  \n",
       "2011-01-13 00:00:00+00:00           0.000000  \n",
       "2011-01-14 00:00:00+00:00           0.000000  \n",
       "2011-01-18 00:00:00+00:00           0.000000  \n",
       "2011-01-19 00:00:00+00:00           0.000000  \n",
       "2011-01-20 00:00:00+00:00           0.000000  \n",
       "2011-01-21 00:00:00+00:00           0.000000  \n",
       "2011-01-24 00:00:00+00:00           0.000000  \n",
       "2011-01-25 00:00:00+00:00           0.000000  \n",
       "2011-01-26 00:00:00+00:00           0.000000  \n",
       "2011-01-27 00:00:00+00:00           0.000000  \n",
       "2011-01-28 00:00:00+00:00           0.000000  \n",
       "2011-01-31 00:00:00+00:00           0.000000  \n",
       "2011-02-01 00:00:00+00:00           0.000000  \n",
       "2011-02-02 00:00:00+00:00           0.000000  \n",
       "2011-02-03 00:00:00+00:00           0.000000  \n",
       "2011-02-04 00:00:00+00:00           0.000000  \n",
       "2011-02-07 00:00:00+00:00           0.000000  \n",
       "2011-02-08 00:00:00+00:00           0.000000  \n",
       "2011-02-09 00:00:00+00:00           0.000000  \n",
       "2011-02-10 00:00:00+00:00           0.000000  \n",
       "2011-02-11 00:00:00+00:00           0.000000  \n",
       "2011-02-14 00:00:00+00:00           0.000000  \n",
       "2011-02-15 00:00:00+00:00           0.000000  \n",
       "2011-02-16 00:00:00+00:00           0.000000  \n",
       "2011-02-17 00:00:00+00:00           0.000000  \n",
       "2011-02-18 00:00:00+00:00           0.000000  \n",
       "...                                      ...  \n",
       "2015-11-20 00:00:00+00:00           0.008950  \n",
       "2015-11-23 00:00:00+00:00          -0.007600  \n",
       "2015-11-24 00:00:00+00:00          -0.000651  \n",
       "2015-11-25 00:00:00+00:00           0.000868  \n",
       "2015-11-27 00:00:00+00:00           0.002343  \n",
       "2015-11-30 00:00:00+00:00          -0.008071  \n",
       "2015-12-01 00:00:00+00:00           0.006632  \n",
       "2015-12-02 00:00:00+00:00          -0.013610  \n",
       "2015-12-03 00:00:00+00:00          -0.025244  \n",
       "2015-12-04 00:00:00+00:00           0.027882  \n",
       "2015-12-07 00:00:00+00:00          -0.011841  \n",
       "2015-12-08 00:00:00+00:00           0.000666  \n",
       "2015-12-09 00:00:00+00:00          -0.015900  \n",
       "2015-12-10 00:00:00+00:00           0.019695  \n",
       "2015-12-11 00:00:00+00:00          -0.005856  \n",
       "2015-12-14 00:00:00+00:00           0.016583  \n",
       "2015-12-15 00:00:00+00:00           0.008156  \n",
       "2015-12-16 00:00:00+00:00           0.002538  \n",
       "2015-12-17 00:00:00+00:00          -0.007637  \n",
       "2015-12-18 00:00:00+00:00          -0.002791  \n",
       "2015-12-21 00:00:00+00:00           0.015894  \n",
       "2015-12-22 00:00:00+00:00           0.008027  \n",
       "2015-12-23 00:00:00+00:00           0.005444  \n",
       "2015-12-24 00:00:00+00:00           0.003121  \n",
       "2015-12-28 00:00:00+00:00          -0.004784  \n",
       "2015-12-29 00:00:00+00:00           0.008997  \n",
       "2015-12-30 00:00:00+00:00          -0.001454  \n",
       "2015-12-31 00:00:00+00:00          -0.007051  \n",
       "2016-01-04 00:00:00+00:00          -0.013564  \n",
       "2016-01-05 00:00:00+00:00           0.015647  \n",
       "\n",
       "[1256 rows x 490 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "returns_df = \\\n",
    "    get_pricing(\n",
    "        data_portal,\n",
    "        trading_calendar,\n",
    "        universe_tickers,\n",
    "        universe_end_date - pd.DateOffset(years=5),\n",
    "        universe_end_date)\\\n",
    "    .pct_change()[1:].fillna(0) #convert prices into returns\n",
    "\n",
    "returns_df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Sector data helper function\n",
    "We'll create an object for you, which defines a sector for each stock.  The sectors are represented by integers.  We inherit from the Classifier class.  [Documentation for Classifier](https://www.quantopian.com/posts/pipeline-classifiers-are-here), and the [source code for Classifier](https://github.com/quantopian/zipline/blob/master/zipline/pipeline/classifiers/classifier.py)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "from zipline.pipeline.classifiers import Classifier\n",
    "from zipline.utils.numpy_utils import int64_dtype\n",
    "class Sector(Classifier):\n",
    "    dtype = int64_dtype\n",
    "    window_length = 0\n",
    "    inputs = ()\n",
    "    missing_value = -1\n",
    "\n",
    "    def __init__(self):\n",
    "        self.data = np.load('../../data/project_4_sector/data.npy')\n",
    "\n",
    "    def _compute(self, arrays, dates, assets, mask):\n",
    "        return np.where(\n",
    "            mask,\n",
    "            self.data[assets],\n",
    "            self.missing_value,\n",
    "        )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "sector = Sector()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## We'll use 2 years of data to calculate the factor"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Note:** Going back 2 years falls on a day when the market is closed. Pipeline package doesn't handle start or end dates that don't fall on days when the market is open. To fix this, we went back 2 extra days to fall on the next day when the market is open."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Timestamp('2014-01-03 00:00:00+0000', tz='UTC')"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "factor_start_date = universe_end_date - pd.DateOffset(years=2, days=2)\n",
    "factor_start_date"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## describing price over time with a curve\n",
    "\n",
    "To describe price over time, we'll use integers that increment each day as the independent variable.  We'll use price as the dependent variable.  Let's practice how to regress the stock price against time and time squared.  This will allow us to describe the trajectory of price over time using a polynomial.\n",
    "\n",
    "$ ClosePrice_i = \\beta \\times time_i + \\gamma \\times time_i^2$\n",
    "\n",
    "First, we'll use `numpy.arange(days)` where days might be 5 for a week, or 252 for a year's worth of data.  So we'll have integers represent the days in this window.\n",
    "\n",
    "To create a 2D numpy array, we can combine them together in a list.  By default, the `numpy.arange` arrays are row vectors, so we use transpose to make them column vectors (one column for each independent variable).\n",
    "\n",
    "We instantiate a LinearRegression object, then call `.fit(X,y)`, passing in the independent and depend variables.  \n",
    "\n",
    "We'll use `.coefficient` to access the coefficients estimated from the data.  There is one for each independent variable."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 0,  0],\n",
       "       [ 1,  1],\n",
       "       [ 2,  4],\n",
       "       [ 3,  9],\n",
       "       [ 4, 16]])"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# we're choosing a window of 5 days as an example\n",
    "X = np.array([np.arange(5), np.arange(5)**2])\n",
    "X = X.T\n",
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.73143186, 0.4889314 , 1.18392888, 0.19422787, 1.53205906])"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#we're making up some numbers to represent the stock price\n",
    "y = np.array(np.random.random(5)*2)\n",
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LinearRegression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "reg = LinearRegression()\n",
    "reg.fit(X,y);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Quiz 1\n",
    "Output the estimates for $\\beta$ and $\\gamma$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The beta is -0.2910 and gamma is 0.1054\n"
     ]
    }
   ],
   "source": [
    "# TODO Output the estimates for Beta and gamma\n",
    "print(f\"The beta is {reg.coef_[0]:.4f} and gamma is {reg.coef_[1]:.4f}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## outputs\n",
    "`outputs` is a class variable defined in CustomFactor class.  We'll set outputs to a list of strings, representing the member variables of the `out` object.\n",
    "\n",
    "* outputs (iterable[str], optional) – An iterable of strings which represent the names of each output this factor should compute and return. If this argument is not passed to the CustomFactor constructor, we look for a class-level attribute named outputs.\n",
    "\n",
    ">So for example, if we create a subclass that inherits from CustomFactor, we can define a class level variable `outputs = ['var1','var2']`, passing in the names of the variables as strings.\n",
    "\n",
    "Here's how this variable is used inside the `compute` function:\n",
    ">out : np.array[self.dtype, ndim=1]\n",
    "    Output array of the same shape as `assets`.  `compute` should write\n",
    "    its desired return values into `out`. If multiple outputs are\n",
    "    specified, `compute` should write its desired return values into\n",
    "    `out.<output_name>` for each output name in `self.outputs`.\n",
    "\n",
    "So if we define `outputs = ['var1', 'var2']`, then inside our `compute` function, we'll have `out.var1` and `out.var2` that are numpy arrays.  Each of these numpy arrays has one element for each stock that we're processing (this is done for us by the code we inherited from CustomFactor.)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## numpy.isfinite\n",
    "\n",
    "Numpy has a way to check for `NaN` (not a number) using `numpy.isnan()`.  We can also check if a number is neither `NaN` nor infinite using `numpy.isfinite()`."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Quiz 2: Regression against time\n",
    "\n",
    "We'll construct a class that inherits from CustomFactor, called `RegressionAgainstTime`.  It will perform a regression on one year's worth of daily data at a time.  If the stock price is either NaN or infinity (bad data, or an infinitely amazing company!), then we don't want to run it through a regression.\n",
    "\n",
    "**Hint:**  See how we do things for the beta variable, and you can do something similar for the gamma variable."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "from zipline.pipeline.data import USEquityPricing\n",
    "from zipline.pipeline.factors import CustomFactor\n",
    "class RegressionAgainstTime(CustomFactor):\n",
    "\n",
    "    #TODO: choose a window length that spans one year's worth of trading days\n",
    "    window_length = 252\n",
    "    \n",
    "    #TODO: use USEquityPricing's close price\n",
    "    inputs = [USEquityPricing.close]\n",
    "    \n",
    "    #TODO: set outputs to a list of strings, which are names of the outputs\n",
    "    #We're calculating regression coefficients for two independent variables, \n",
    "    # called beta and gamma\n",
    "    outputs = ['beta', 'gamma']\n",
    "    \n",
    "    def compute(self, today, assets, out, dependent):\n",
    "        \n",
    "        #TODO: define an independent variable that represents time from the start to end\n",
    "        # of the window length. E.g. [1,2,3...252]\n",
    "        t1 = np.arange(self.window_length)\n",
    "        \n",
    "        #TODO: define a second independent variable that represents time ^2\n",
    "        t2 = np.arange(self.window_length)**2\n",
    "        \n",
    "        # combine t1 and t2 into a 2D numpy array\n",
    "        X = np.array([t1,t2]).T\n",
    "\n",
    "    \n",
    "        #TODO: the number of stocks is equal to the length of the \"out\" variable,\n",
    "        # because the \"out\" variable has one element for each stock\n",
    "        n_stocks = len(out)\n",
    "        # loop over each asset\n",
    "\n",
    "        for i in range(n_stocks):\n",
    "            # TODO: \"dependent\" is a 2D numpy array that\n",
    "            # has one stock series in each column,\n",
    "            # and days are along the rows.\n",
    "            # set y equal to all rows for column i of \"dependent\"\n",
    "            y = dependent[:, i]\n",
    "            \n",
    "            # TODO: run a regression only if all values of y\n",
    "            # are finite.\n",
    "            if np.all(np.isfinite(y)):\n",
    "                # create a LinearRegression object\n",
    "                regressor = LinearRegression()\n",
    "                \n",
    "                # TODO: fit the regressor on X and y\n",
    "                regressor.fit(X, y)\n",
    "                \n",
    "                # store the beta coefficient\n",
    "                out.beta[i] = regressor.coef_[0]\n",
    "                \n",
    "                #TODO: store the gamma coefficient\n",
    "                out.gamma[i] = regressor.coef_[1]\n",
    "            else:\n",
    "                # store beta as not-a-number\n",
    "                out.beta[i] = np.nan\n",
    "                \n",
    "                # TODO: store gammas not-a-number\n",
    "                out.gamma[i] = np.nan\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Quiz 3: Create conditional factor\n",
    "\n",
    "We can create the conditional factor as the product of beta and gamma factors.\n",
    "\n",
    "$ joint_{Factor} = \\beta_{Factor} \\times \\gamma_{Factor} $\n",
    "\n",
    "\n",
    "If you see the [documentation for the Factor class](https://www.zipline.io/appendix.html?highlight=customfactor#zipline.pipeline.factors.Factor):\n",
    "\n",
    "> Factors can be combined, both with other Factors and with scalar values, via any of the builtin mathematical operators (+, -, *, etc). This makes it easy to write complex expressions that combine multiple Factors. For example, constructing a Factor that computes the average of two other Factors is simply:\n",
    "\n",
    "```\n",
    "f1 = SomeFactor(...)  \n",
    "f2 = SomeOtherFactor(...)  \n",
    "average = (f1 + f2) / 2.0  \n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Example: we'll call the RegressionAgainstTime constructor,\n",
    "# pass in the \"universe\" variable as our mask, \n",
    "# and get the \"beta\" variable from that object.\n",
    "# Then we'll get the rank based on the beta value.\n",
    "beta_factor = (RegressionAgainstTime(mask=universe).beta.rank())\n",
    "\n",
    "# TODO: similar to the beta factor,\n",
    "# We'll create the gamma factor\n",
    "gamma_factor = (RegressionAgainstTime(mask=universe).gamma.rank())\n",
    "\n",
    "# TODO: if we multiply the beta factor and gamma factor,\n",
    "# we can then rank that product to create the conditional factor\n",
    "conditional_factor = beta_factor * gamma_factor\n",
    "\n",
    "p = Pipeline(screen=universe)\n",
    "# Add the beta, gamma and conditional factor to the pipeline\n",
    "p.add(beta_factor, 'time_beta')\n",
    "p.add(gamma_factor, 'time_gamma')\n",
    "p.add(conditional_factor, 'conditional_factor')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Visualize the pipeline\n",
    "\n",
    "Note that you can right-click the image and view in a separate window if it's too small."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "p.show_graph(format='png')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## run pipeline and view the factor data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = engine.run_pipeline(p, factor_start_date, universe_end_date)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>conditional_factor</th>\n",
       "      <th>time_beta</th>\n",
       "      <th>time_gamma</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">2014-01-03 00:00:00+00:00</th>\n",
       "      <th>Equity(0 [A])</th>\n",
       "      <td>173048.0</td>\n",
       "      <td>446.0</td>\n",
       "      <td>388.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Equity(1 [AAL])</th>\n",
       "      <td>32208.0</td>\n",
       "      <td>88.0</td>\n",
       "      <td>366.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Equity(2 [AAP])</th>\n",
       "      <td>14136.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>456.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Equity(3 [AAPL])</th>\n",
       "      <td>3234.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>462.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Equity(4 [ABBV])</th>\n",
       "      <td>64680.0</td>\n",
       "      <td>308.0</td>\n",
       "      <td>210.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                            conditional_factor  time_beta  \\\n",
       "2014-01-03 00:00:00+00:00 Equity(0 [A])               173048.0      446.0   \n",
       "                          Equity(1 [AAL])              32208.0       88.0   \n",
       "                          Equity(2 [AAP])              14136.0       31.0   \n",
       "                          Equity(3 [AAPL])              3234.0        7.0   \n",
       "                          Equity(4 [ABBV])             64680.0      308.0   \n",
       "\n",
       "                                            time_gamma  \n",
       "2014-01-03 00:00:00+00:00 Equity(0 [A])          388.0  \n",
       "                          Equity(1 [AAL])        366.0  \n",
       "                          Equity(2 [AAP])        456.0  \n",
       "                          Equity(3 [AAPL])       462.0  \n",
       "                          Equity(4 [ABBV])       210.0  "
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Visualize factor returns\n",
    "\n",
    "These are returns that a theoretical portfolio would have if its stock weights were determined by a single alpha factor's values."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "from quiz_helper import make_factor_plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Formatting factor data for: conditional_factor\n",
      "Dropped 0.4% entries from factor data: 0.4% in forward returns computation and 0.0% in binning phase (set max_loss=0 to see potentially suppressed Exceptions).\n",
      "max_loss is 35.0%, not exceeded: OK!\n",
      "Formatting factor data for: time_beta\n",
      "Dropped 0.4% entries from factor data: 0.4% in forward returns computation and 0.0% in binning phase (set max_loss=0 to see potentially suppressed Exceptions).\n",
      "max_loss is 35.0%, not exceeded: OK!\n",
      "Formatting factor data for: time_gamma\n",
      "Dropped 0.4% entries from factor data: 0.4% in forward returns computation and 0.0% in binning phase (set max_loss=0 to see potentially suppressed Exceptions).\n",
      "max_loss is 35.0%, not exceeded: OK!\n",
      "Time to get arrange factor data: 10.43 secs\n",
      "Time to generate long/short returns: 1.10 secs\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f3ed2568c50>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "make_factor_plot(df, data_portal, trading_calendar, factor_start_date, universe_end_date);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Solution\n",
    "[The solution notebook is here](regression_against_time_solution.ipynb)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
